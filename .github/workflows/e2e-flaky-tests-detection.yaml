
name: E2E Flaky Tests Detection

on:
  pull_request:
    types: [opened, synchronize, labeled]
  workflow_dispatch:

env:
  MIX_ENV: test
  NODE_VERSION: "20"
  PYTHON_VERSION: "3.12.3"

jobs:
  elixir-deps:
    name: Elixir ${{ matrix.mix_env }} dependencies
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - mix_env: dev
          - mix_env: test
    env:
      MIX_ENV: ${{ matrix.mix_env }}
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup
        id: setup-elixir
        uses: erlef/setup-beam@v1
        with:
          version-file: .tool-versions
          version-type: strict
        env:
          ImageOS: ubuntu20
      - name: Retrieve Cached Dependencies
        uses: actions/cache@v4
        id: mix-cache
        with:
          path: |
            deps
            _build/${{ matrix.mix_env }}
            priv/plts
          key: ${{ runner.os }}-${{ steps.setup-elixir.outputs.otp-version }}-${{ steps.setup-elixir.outputs.elixir-version }}-${{ hashFiles('mix.lock') }}
      - name: Install Dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p priv/plts
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
          mix deps.compile --warnings-as-errors
          mix dialyzer --plt

  npm-deps:
    name: Npm dependencies
    runs-on: ubuntu-20.04
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Retrieve Cached Dependencies
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: |
            assets/node_modules
          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-${{ hashFiles('assets/package-lock.json') }}
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install NPM dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: cd assets && npm install



  npm-e2e-deps:
    name: Npm E2E dependencies
    runs-on: ubuntu-20.04
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Retrieve Cached Dependencies
        uses: actions/cache@v4
        id: npm-e2e-cache
        with:
          path: |
            test/e2e/node_modules
          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-${{ hashFiles('test/e2e/package-lock.json') }}
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install E2E NPM dependencies
        if: steps.npm-e2e-cache.outputs.cache-hit != 'true'
        run: cd test/e2e && npm install

  test-e2e:
    name: Cypress Run
    needs: [elixir-deps, npm-deps, npm-e2e-deps]
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        containers: [1,2]
    env:
      MIX_ENV: dev
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup
        id: setup-elixir
        uses: erlef/setup-beam@v1
        with:
          version-file: .tool-versions
          version-type: strict
        env:
          ImageOS: ubuntu20
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Retrieve Cached Dependencies
        uses: actions/cache@v4
        id: mix-cache
        with:
          path: |
            deps
            _build/dev
            priv/plts
          key: ${{ runner.os }}-${{ steps.setup-elixir.outputs.otp-version }}-${{ steps.setup-elixir.outputs.elixir-version }}-${{ hashFiles('mix.lock') }}
      - name: Retrieve NPM Cached Dependencies
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: |
            assets/node_modules
          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-${{ hashFiles('assets/package-lock.json') }}

      - name: Retrieve E2E NPM Cached Dependencies
        uses: actions/cache@v4
        id: npm-e2e-cache
        with:
          path: |
            test/e2e/node_modules
          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-${{ hashFiles('test/e2e/package-lock.json') }}
      - name: Install Cypress
        run: npx cypress install
        working-directory: test/e2e
      - name: Install photofinish
        uses: jaxxstorm/action-install-gh-release@v1.14.0
        with:
          repo: trento-project/photofinish
          tag: v1.4.1
          cache: enable
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Give executable permissions to photofinish
        run: chmod +x $(whereis photofinish | cut -d" " -f2)
      - name: Install Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
      - name: Run makefile e2e-Tests
        run: make N-TIMES=1 gen-test-data-e2e-ci
        working-directory: hack/flaky_tests_analysis
      - name: Upload cypress test junit reports
        uses: actions/upload-artifact@v4
        with:
          name: e2e-junit-reports-${{ matrix.containers }}
          path: /tmp/*.xml

  flaky-tests-analysis:
    name: Flaky Tests Analysis
    needs: test-e2e
    runs-on: ubuntu-20.04
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0        
      - name: Download cypress test junit reports
        uses: actions/download-artifact@v4
        with:
          name: e2e-junit-reports-1       
      - name: Extract downloaded zip junit reports
        run: |
          mkdir -p /tmp/e2e-junit-reports
          for zip in /tmp/e2e-junit-reports-*.zip; do
            unzip "$zip" -d /tmp/extracted-reports
          done
      - name: Resolve conflicts and put all junit files in the same folder
        run: |
          mkdir -p /tmp/final-junit-reports
          COUNTER=1
          for file in /tmp/extracted-reports/**/*.xml; do
            BASENAME=$(basename "$file")
            DEST="/tmp/final-junit-reports/$BASENAME"
            if [ -f "$DEST" ]; then
              mv "$file" "/tmp/final-junit-reports/${COUNTER}_$BASENAME"
              COUNTER=$((COUNTER + 1))
            else
              mv "$file" "$DEST"
            fi
          done
      - name: List all processed JUnit files
        run: |
          echo "Listing all JUnit XML files in /tmp/final-junit-reports:"
          ls -l /tmp/final-junit-reports      


