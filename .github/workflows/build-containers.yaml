name: Build containers

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
        description: "The container image name, e.g. 'trento-web'"
      tag:
        required: true
        type: string
        description: "The container image tag. Note that this might be either a fixed version string, or a moving tag like 'rolling'"
      MIX_ENV:
        required: false
        type: string
        default: prod
        description: "The MIX_ENV build environment variable. This is mainly used to build a bespoke image variant for the demo deployment, and should be left to default value in most cases."
      registry:
        required: false
        type: string
        default: ghcr.io
        description: "The container registry FQDN. Extracted here for clarity, just leave it to default."

jobs:
  build-and-push:
    name: Build and push
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
    env:
      IMAGE_REPOSITORY: ${{ inputs.registry }}/${{ github.repository_owner }}/${{ inputs.image_name }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96
        with:
          images: ${{ env.IMAGE_REPOSITORY }}
      - name: Get version from git history
        id: get_version_from_git
        run: echo "version=$(hack/get_version_from_git.sh)" >> $GITHUB_OUTPUT
      - name: Build and push container image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_REPOSITORY }}:${{ inputs.tag }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ steps.get_version_from_git.outputs.version }}
            MIX_ENV=${{ inputs.MIX_ENV }}
