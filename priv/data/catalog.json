[
  {
    "id": "156F64",
    "name": "1.1.1",
    "group": "Corosync",
    "provider": "aws",
    "description": "Corosync `token` timeout is set to `30000`\n",
    "remediation": "## Abstract\nThe value of the Corosync `token` timeout is not set as recommended.\n\n## Remediation\n\nAdjust the corosync `token` timeout as recommended on the best practices, and reload the corosync configuration\n\n1. Set the correct `token` timeout in the totem session in the corosync config file `/etc/corosync/corosync.conf`. This action must be repeated in all nodes of the cluster.\n   ```\n   [...]\n   totem { \n          token: \u003ctimeout value\u003e \n         }\n   [...]\n   ```   \n2. Reload the corosync configuration:\n   `crm corosync reload`\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nGCP: \n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles#create_the_corosync_configuration_files\n\nAWS:\n\n  -\thttps://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    #!/usr/bin/bash\n    # test fails, if corosync.conf file is even missing\n    [ -f /etc/corosync/corosync.conf ] || exit 1\n    TOKEN=$(\n        perl  -e '\n        while (\u003c\u003e) {\n            # filter out lines beginnig with hash sign (optionally after whitespace)\n            if (! /^\\s*#/ ) {\n                $cont .= $_;\n            }\n        }\n        # search for all directives totem { ... }\n        while ($cont =~ m/\\btotem\\s*{[^}]*}/gs) {\n            my $totemStr=$\u0026;\n            # filter for key value pairs for token\n            if ($totemStr =~ /token:\\s*(\\S*)\\s*/g) {         \n                print \"$1\";\n            }\n        }\n        printf \"\\n\"' \u003c /etc/corosync/corosync.conf\n    )\n    [[ \"$TOKEN\" == \"{{ expected[name] }}\" ]] \u0026\u0026 exit 0\n    exit 1\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "53D035",
    "name": "1.1.1.runtime",
    "group": "Corosync",
    "provider": "aws",
    "description": "Corosync is running with `token` timeout set to `30000`\n",
    "remediation": "## Abstract\nThe runtime value of the Corosync `token` timeout is not set as recommended.\n\n## Remediation\n\nAdjust the corosync `token` timeout as recommended on the best practices, and reload the corosync configuration\n\n\n1. Set the correct `token` timeout in the totem session in the corosync config file `/etc/corosync/corosync.conf`. This action must be repeated in all nodes of the cluster.\n   ```\n   [...]\n   totem { \n          token: \u003ctimeout value\u003e \n         }\n   [...]\n   ```   \n2. Reload the corosync configuration:\n   `crm corosync reload`\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles#create_the_corosync_configuration_files\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: 'corosync-cmapctl | grep \"runtime.config.totem.token (u32) = \" | sed \"s/^.*= //\"'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected['1.1.1']\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "A1244C",
    "name": "1.1.2",
    "group": "Corosync",
    "provider": "aws",
    "description": "Corosync `consensus` timeout is set to `36000`\n",
    "remediation": "## Remediation\nAdjust the Corosync `consensus` timeout as recommended by the Azure best practices.\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  lineinfile:\n    path: /etc/corosync/corosync.conf\n    regexp: '^(\\s*){{ key_name }}:(\\s*)\\S*(\\s)*$'\n    line: '\\g\u003c1\u003e{{ key_name }}:\\g\u003c2\u003e{{ expected[name] }}\\g\u003c3\u003e'\n    backrefs: yes\n    #insertafter: 'totem {'\n  register: config_updated\n  when: ansible_check_mode\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "FB0E0D",
    "name": "1.1.2.runtime",
    "group": "Corosync",
    "provider": "aws",
    "description": "Corosync is running with `consensus` timeout set to `36000`\n",
    "remediation": "## Abstract\nThe runtime value of the Corosync `consensus` timeout is not set as recommended.\n\n## Remediation\nAdjust the corosync `consensus` timeout as recommended by the Azure best practices, and reload the corosync service.\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: 'corosync-cmapctl | grep \"runtime.config.totem.consensus (u32) = \" | sed \"s/^.*= //\"'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected['1.1.2']\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "845CC9",
    "name": "1.1.3",
    "group": "Corosync",
    "provider": "aws",
    "description": "Corosync `max_messages` is set to `20`\n",
    "remediation": "## Remediation\nAdjust the Corosync `max_messages` parameter as recommended by the Azure best practices.\n\n## References\nAZURE:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  lineinfile:\n    path: /etc/corosync/corosync.conf\n    regexp: '^(\\s*){{ key_name }}:(\\s*)\\S*(\\s)*$'\n    line: '\\g\u003c1\u003e{{ key_name }}:\\g\u003c2\u003e{{ expected[name] }}\\g\u003c3\u003e'\n    backrefs: yes\n    #insertafter: 'totem {'\n  register: config_updated\n  when: ansible_check_mode\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "00081D",
    "name": "1.1.3.runtime",
    "group": "Corosync",
    "provider": "aws",
    "description": "Corosync is running with `max_messages` set to `20`\n",
    "remediation": "## Abstract\nThe runtime value of the Corosync `max_messages` parameter is not set as recommended.\n\n## Remediation\nAdjust the corosync `max_messages` parameter as recommended by the Azure best practices, and reload the corosync service.\n\n## References\nAZURE:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: 'corosync-cmapctl | grep \"runtime.config.totem.max_messages (u32) = \" | sed \"s/^.*= //\"'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected['1.1.3']\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "24ABCB",
    "name": "1.1.4",
    "group": "Corosync",
    "provider": "aws",
    "description": "Corosync `join` is set to `60`\n",
    "remediation": "## Remediation\nAdjust the Corosync `join` parameter as recommended by the Azure best practices.\n\n## References\nAZURE:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  lineinfile:\n    path: /etc/corosync/corosync.conf\n    regexp: '^(\\s*){{ key_name }}:(\\s*)\\S*(\\s)*$'\n    line: '\\g\u003c1\u003e{{ key_name }}:\\g\u003c2\u003e{{ expected[name] }}\\g\u003c3\u003e'\n    backrefs: yes\n    #insertafter: 'totem {'\n  register: config_updated\n  when: ansible_check_mode\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "822E47",
    "name": "1.1.4.runtime",
    "group": "Corosync",
    "provider": "aws",
    "description": "Corosync is running with `join` set to `60`\n",
    "remediation": "## Abstract\nThe runtime value of the Corosync `join` parameter is not set as recommended.\n\n## Remediation\nAdjust the corosync `join` parameter as recommended by the Azure best practices, and reload the corosync service.\n\n## References\nAZURE:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: 'corosync-cmapctl | grep \"runtime.config.totem.join (u32) = \" | sed \"s/^.*= //\"'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected['1.1.4']\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "21FCA6",
    "name": "1.1.5",
    "group": "Corosync",
    "provider": "aws",
    "description": "Corosync `token_retransmits_before_loss_const` is set to: `6`\n",
    "remediation": "## Remediation\nAdjust the corosync `token_retransmits_before_loss_const` parameter to `6` as recommended by the Azure best practices.\n\n## References\nAZURE:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  lineinfile:\n    path: /etc/corosync/corosync.conf\n    regexp: '^(\\s*){{ key_name }}:(\\s*)\\S*(\\s)*$'\n    line: '\\g\u003c1\u003e{{ key_name }}:\\g\u003c2\u003e{{ expected[name] }}\\g\u003c3\u003e'\n    backrefs: yes\n    #insertafter: 'totem {'\n  register: config_updated\n  when: ansible_check_mode\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "15F7A8",
    "name": "1.1.5.runtime",
    "group": "Corosync",
    "provider": "aws",
    "description": "Corosync is running with `token_retransmits_before_loss_const` set to `6`\n",
    "remediation": "## Abstract\nThe runtime value of the corosync `token_retransmits_before_loss_const` parameter is not set as recommended\n\n## Remediation\nAdjust the corosync `token_retransmits_before_loss_const` parameter as recommended on the Azure best practices, and reload the corosync service.\n\n## References\nAZURE:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: 'corosync-cmapctl | grep \"runtime.config.totem.token_retransmits_before_loss_const (u32) = \" | sed \"s/^.*= //\"'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected['1.1.5']\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "33403D",
    "name": "1.1.6",
    "group": "Corosync",
    "provider": "aws",
    "description": "Corosync `transport` is set to `udpu`\n",
    "remediation": "## Remediation\nTo change the corosync MCAST transport to UCAST edit the /etc/corosync/corosync.conf\nas in the example\n```\n    max_messages: 20\n    interface {\n        ringnumber: 0\n-       bindnetaddr: 10.162.32.167\n-       mcastaddr: 239.11.100.41\n        mcastport: 5405\n        ttl: 1\n    }\n+   transport: udpu\n...\n+nodelist {\n+       node {\n+               ring0_addr: 10.162.32.167\n+               nodeid: 1\n+       }\n+\n+       node {\n+               ring0_addr: 10.162.32.89\n+               nodeid: 2\n+       }\n+\n+}\n```\n1. stop the already running cluster by using **systemctl stop pacemaker**\n2. In the totem section, in the interface subsection remove the\nkeys-value pairs **bindnetaddr** and **mcastaddr**\n3. In the totem section add key-value pair **transport: udpu**\n4. Add section nodelist and subsections node for each nodes of the\ncluster, where the **ring0_addr** is the IP address of the node\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles#create_the_corosync_configuration_files\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-adapting-the-corosync-and-sbd-configuration\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  lineinfile:\n    path: /etc/corosync/corosync.conf\n    regexp: '^(\\s*){{ key_name }}:(\\s*)\\S*(\\s)*$'\n    line: '\\g\u003c1\u003e{{ key_name }}:\\g\u003c2\u003e{{ expected[name] }}\\g\u003c3\u003e'\n    backrefs: yes\n    #insertafter: 'totem {'\n  register: config_updated\n  when: ansible_check_mode\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "7E0221",
    "name": "1.1.6.runtime",
    "group": "Corosync",
    "provider": "aws",
    "description": "Corosync is running with `transport` set to `udpu`\n",
    "remediation": "## Remediation\nTo change the corosync MCAST transport to UCAST edit the /etc/corosync/corosync.conf\nas in the example\n```\n    max_messages: 20\n    interface {\n        ringnumber: 0\n-       bindnetaddr: 10.162.32.167\n-       mcastaddr: 239.11.100.41\n        mcastport: 5405\n        ttl: 1\n    }\n+   transport: udpu\n...\n+nodelist {\n+       node {\n+               ring0_addr: 10.162.32.167\n+               nodeid: 1\n+       }\n+\n+       node {\n+               ring0_addr: 10.162.32.89\n+               nodeid: 2\n+       }\n+\n+}\n```\n1. stop the already running cluster by using **systemctl stop pacemaker**\n2. In the totem section, in the interface subsection remove the\nkeys-value pairs **bindnetaddr** and **mcastaddr**\n3. In the totem section add key-value pair **transport: udpu**\n4. Add section nodelist and subsections node for each nodes of the\ncluster, where the **ring0_addr** is the IP address of the node\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles#create_the_corosync_configuration_files\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-adapting-the-corosync-and-sbd-configuration\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: 'corosync-cmapctl | grep \"totem.transport (str) = \" | sed \"s/.*= //\"'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected['1.1.6']\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "C620DC",
    "name": "1.1.7",
    "group": "Corosync",
    "provider": "aws",
    "description": "Corosync `expected_votes` is set to `2`\n",
    "remediation": "## Remediation\nAdjust the corosync `expected_votes` parameter to `2` to make sure pacemaker calculates the actions properly for a two-node cluster.\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  lineinfile:\n    path: /etc/corosync/corosync.conf\n    regexp: '^(\\s*){{ key_name }}:(\\s*)\\S*(\\s)*$'\n    line: '\\g\u003c1\u003e{{ key_name }}:\\g\u003c2\u003e{{ expected[name] }}\\g\u003c3\u003e'\n    backrefs: yes\n    #insertafter: 'quorum {'\n  register: config_updated\n  when: ansible_check_mode\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "6E9B82",
    "name": "1.1.8",
    "group": "Corosync",
    "provider": "aws",
    "description": "Corosync `two_node` is set to `1`\n",
    "remediation": "## Abstract\nThe runtime value of the corosync `two_node` parameter is not set as recommended.\n\n## Remediation\nAdjust the corosync two_node parameter to `1` to make sure Pacemaker calculates the actions properly for a two-node cluster.\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  lineinfile:\n    path: /etc/corosync/corosync.conf\n    regexp: '^(\\s*){{ key_name }}:(\\s*)\\S*(\\s)*$'\n    line: '\\g\u003c1\u003e{{ key_name }}:\\g\u003c2\u003e{{ expected[name] }}\\g\u003c3\u003e'\n    backrefs: yes\n    #insertafter: 'quorum {'\n  register: config_updated\n  when: ansible_check_mode\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "D78671",
    "name": "1.1.8.runtime",
    "group": "Corosync",
    "provider": "aws",
    "description": "Corosync is running with `two_node` set to `1`\n",
    "remediation": "## Abstract\nThe runtime value of the corosync `two_node` parameter is not set as recommended.\n\n## Remediation\nAdjust the corosync `two_node` parameter to `1` to make sure Pacemaker calculates the actions properly for a two-node cluster,\nand reload the Corosync service.\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: 'corosync-cmapctl | grep \"runtime.votequorum.two_node (u8) = \" | sed \"s/^.*= //\"'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected['1.1.8']\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "DA114A",
    "name": "1.1.9",
    "group": "Corosync",
    "provider": "aws",
    "description": "Corosync has at least 2 rings configured\n",
    "remediation": "## Abstract\nIt is strongly recommended to add a second ring to the corosync communication.\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n - section 9.1.3 in https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-adapting-the-corosync-and-sbd-configuration\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    RING_CHECK=$(\n        perl  -n -e '\n        my $cont;\n        while (\u003c\u003e) {\n            # filter out lines beginnig with hash sign (optionally after whitespace)\n            if (! /^\\W*#/ ) {\n                $cont .= $_;\n            }\n        }\n        my $node=0;\n        # search for all (sub)directives node { ... }\n        while ($cont =~ m/\\bnode\\W*{[^}]*}/gs) {\n            $node++;\n            my $nodeStr=$\u0026;\n            # filter for key value pairs for ring adresses for ring0 and ring1\n            if ($nodeStr =~ /(ring0_addr:\\W*(.*))\\W*(ring1_addr:\\W*(.*))?\\W*/g) {\n                if ( $2 ne \"\" and $4 ne \"\" ) {\n                    # report a \"2\", if both attributes are set with values\n                    print \"2\"\n                } elsif ( $2 ne \"\" or $4 ne \"\" ) {\n                    print \"1\"\n                } else {\n                    print \"0\"\n                }\n            }\n        }\n        printf \"\\n\"' \u003c /etc/corosync/corosync.conf\n    )\n    #echo \"RING_CHECK=$RING_CHECK\" \u003e /tmp/test119\n    [[ \"$RING_CHECK\" == \"{{ expected[name] }}\" ]] \u0026\u0026 exit 0\n    exit 1\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "32CFC6",
    "name": "1.1.9.runtime",
    "group": "Corosync",
    "provider": "aws",
    "description": "Corosync is running with at least 2 rings\n",
    "remediation": "## Abstract\nIt is strongly recommended to add a second ring to the corosync communication.\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n - section 9.1.3 in https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-adapting-the-corosync-and-sbd-configuration\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    INTERFACE_COUNT=$(corosync-cmapctl | grep totem.interface\\\\..*\\.bindnetaddr | wc -l)\n    [[ ${INTERFACE_COUNT} -eq \"2\" ]] \u0026\u0026 exit 0\n    exit 1\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "205AF7",
    "name": "1.2.1",
    "group": "Pacemaker",
    "provider": "aws",
    "description": "Fencing is enabled in the cluster attributes\n",
    "remediation": "## Abstract\nFencing is mandatory to guarantee data integrity for your SAP Applications.\nRunning a HA Cluster without fencing is not supported and might cause data loss.\n\n## Remediation\nExecute the following command to enable it:\n```\ncrm configure property stonith-enabled=true\n```\n\n## References\nAZURE:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#create-a-stonith-device-on-the-pacemaker-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-resources.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles#configure_the_general_cluster_properties\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-cluster-bootstrap-and-more\n  - https://documentation.suse.com/sle-ha/15-SP3/html/SLE-HA-all/cha-ha-fencing.html#sec-ha-fencing-recommend\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  command: 'crm_attribute -t crm_config -G -n stonith-enabled --quiet'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected[name]\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "373DB8",
    "name": "1.2.2",
    "group": "Pacemaker",
    "provider": "aws",
    "description": "Cluster fencing timeout is configured correctly\n",
    "remediation": "## Abstract\nThe fencing timeout (`stonith-timeout`) determines the time Pacemaker will wait for fencing to succeed.\nThe recommended values on Azure are `144` seconds for SBD only or `900` seconds when using SBD combined with the Azure Fence agent.\n\n## Remediation\nExecute the following command to adjust the timeout for your usecase:\n```crm configure property stonith-timeout=144```\nor\n```crm configure property stonith-timeout=900```\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#create-a-stonith-device-on-the-pacemaker-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-resources.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles#configure_the_general_cluster_properties\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-cluster-bootstrap-and-more\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n   timeout=$(crm_attribute -t crm_config -G -n stonith-timeout --quiet | sed -e 's/s$//')\n   #\n   # for aws and gcp we might need additional expected vars (name + fence_aws_...)\n   #\n   if [[cibadmin -Q --xpath \"//primitive[@type='fence_azure_arm']/@type\" \u003e /dev/null 2\u003e\u00261 ]]; then\n     exit $([[ \"${timeout}\" -eq {{ expected[name + '.fence_azure_arm'] }} ]])\n   else\n     exit $([[ \"${timeout}\" -ge {{ expected[name + '.sbd'] }} ]])\n   fi\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "0B6DB2",
    "name": "1.3.1",
    "group": "SBD",
    "provider": "aws",
    "description": "`SBD_PACEMAKER` value is correctly set in SBD configuration\n\nNot applicable for GCP, AWS\n",
    "remediation": "## Abstract\nFor proper SBD fencing, make sure that the integration with Pacemaker is enabled.\n**IMPORTANT**: Always verify these steps in a testing environment before doing so in production ones!\n\nThe SBD is not used in GCP or AWS environments.\n## Remediation\nRun the following commands in order:\n\n1. Put cluster into maintenance mode:\n   ```crm configure property maintenance-mode=true```\n2. Stop the cluster:\n   ```crm cluster stop```\n3. Set the SBD_PACEMAKER parameter to `yes` on `/etc/sysconfig/sbd`:\n   ```\n   [...]\n   SBD_PACEMAKER=\"yes\"\n   [...]\n   ```\n4. Restart the cluster:\n   ```crm cluster start```\n5. Put cluster out of maintenance mode\n   ```crm configure property maintenance-mode=false```\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#set-up-the-iscsi-target-server-sbd-device\n\nAWS:\n\n\nGCP:\n\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sle-ha/15-SP3/html/SLE-HA-all/cha-ha-storage-protect.html\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-1.11.5.5.4.4\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n      #!/bin/bash\n      [ '{{ expected[name] }}' == '@@skip@@' ] \u0026\u0026 exit 0\n      source /etc/sysconfig/sbd || exit 1\n      [ \"${SBD_PACEMAKER}\" == '{{ expected[name] }}' ] || exit 1\n      exit 0\n\n  register: config_updated\n  check_mode: false\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "49591F",
    "name": "1.3.2",
    "group": "SBD",
    "provider": "aws",
    "description": "`SBD_STARTMODE` is set to `always`\n\nNot applicable for GCP, AWS\n",
    "remediation": "## Abstract\nIf not set to always, SBD will not automatically start if the node was previously fenced as it will expect the cluster in a clean state.\n**IMPORTANT**: Always verify these steps in a testing environment before doing so in production ones!\n\nThe SBD is not used in GCP or AWS environments.\n## Remediation\nRun the following commands in order:\n\n1. Put cluster into maintenance mode:\n   ```crm configure property maintenance-mode=true```\n2. Stop the cluster:\n   ```crm cluster stop```\n2. Set the SBD_STARTMODE parameter to `always` on `/etc/sysconfig/sbd`:\n   ```\n   [...]\n   SBD_STARTMODE=\"always\"\n   [...]\n   ```\n3. Restart the cluster:\n   ```crm cluster start```\n4. Put cluster out of maintenance mode:\n   ```crm configure property maintenance-mode=false```\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#set-up-the-iscsi-target-server-sbd-device\n\nAWS:\n\nGCP:\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-1.11.5.5.4.4\n  - https://documentation.suse.com/sle-ha/15-SP3/html/SLE-HA-all/cha-ha-storage-protect.html\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  check_mode: false\n  shell: |\n      #!/bin/bash\n      [ '{{ expected[name] }}' == '@@skip@@' ] \u0026\u0026 exit 0\n      source /etc/sysconfig/sbd || exit 1\n      [ \"${SBD_STARTMODE}\" == '{{ expected[name] }}' ] || exit 1\n      exit 0\n\n  register: config_updated\n  check_mode: false\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "816815",
    "name": "1.3.3",
    "group": "SBD",
    "provider": "aws",
    "description": "SBD service is enabled\n\nNot applicable to GCP, AWS\n",
    "remediation": "## Abstract\nIf not enabled, SBD service will not start automatically after reboots, affecting the correct cluster startup.\n\nThe SBD is not used in GCP or AWS environments.\n## Remediation\nTo enable the service, run:\n```\nsystemctl enable sbd\n```\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#set-up-the-iscsi-target-server-sbd-device\n\nAWS:\n\nGCP:\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sle-ha/15-SP3/html/SLE-HA-all/cha-ha-storage-protect.html#pro-ha-storage-protect-sbd-services\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  systemd:\n    name: sbd\n    enabled: true\n  register: config_updated\n  when:\n    - ansible_check_mode\n    - expected[name]!=\"@@skip@@\"\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n    - expected[name]!=\"@@skip@@\"\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "61451E",
    "name": "1.3.4",
    "group": "SBD",
    "provider": "aws",
    "description": "Multiple SBD devices are configured\n\nNot applicable to GCP, AWS\n",
    "remediation": "## Abstract\nIt is recommended to configure 3 SBD devices for production environments.\n\nThe SBD is not used in GCP or AWS environments.\n\n## References\nAzure:\n\n  -  https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#set-up-sbd-device\n\nAWS:\n\nGCP:\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#cha.hana-sr.scenario\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    #!/bin/bash\n    [ '{{ expected[name] }}' == '@@skip@@' ] \u0026\u0026 { echo '@@skip@@';  exit 0; }\n    file=\"/etc/sysconfig/sbd\"\n    source \"$file\" || exit 1\n    COUNT=$(perl -e '\n          my $sbd_device=\"'$SBD_DEVICE'\";\n          my $count;\n          my @paths=split(\";\", $sbd_device);\n          if ( $paths[-1] ne \"\" ) {\n              $count = $#paths + 1;\n          } else {\n              $count = $#paths;\n          }\n          printf \"%i\\n\",  $count\n        ')\n    [[ \"${COUNT}\" == {{ expected[name] }} ]] \u0026\u0026 exit 0\n    exit 1\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "B089BE",
    "name": "1.3.5",
    "group": "SBD",
    "provider": "aws",
    "description": "SBD watchdog timeout is set to `@@skip@@`\n\nNot applicable to GCP, AWS\n",
    "remediation": "## Remediation\nMake sure you configure your SBD Watchdog Timeout to `@@skip@@` seconds as recommended on the best practices.\n\nThe SBD is not used in GCP or AWS environments.\n\n## References\nAzure:\n\n  -  https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#set-up-sbd-device\n\nAWS:\n\nGCP:\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-cluster-bootstrap-and-more\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    [ '{{ expected[name] }}' == '@@skip@@' ] \u0026\u0026 { echo '@@skip@@';  exit 0; }\n    DEF_WDTIMEOUT={{ expected[name] }}\n    result_wdtimeout=${DEF_WDTIMEOUT}\n\n    if [ -f /etc/sysconfig/sbd ]; then\n      source /etc/sysconfig/sbd\n    else\n      exit 1\n    fi\n\n    IFS=';' sbdarray=( $SBD_DEVICE )\n\n    for i in \"${sbdarray[@]}\"\n    do\n      device=\"${i//[[:space:]]/}\"\n      wdtimeout=$(/usr/sbin/sbd -d ${device} dump | grep -oP 'Timeout \\(watchdog\\)  *: \\K\\d+')|| echo \"\"\n      if [[ \"${wdtimeout}\" -ne \"${DEF_WDTIMEOUT}\" ]]; then\n        result_wdtimeout=\"${wdtimeout}\"\n      fi\n    done\n    echo \"${result_wdtimeout}\"\n\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected[name]\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "68626E",
    "name": "1.3.6",
    "group": "SBD",
    "provider": "aws",
    "description": "SBD `msgwait` timeout value is two times the watchdog timeout\n\nNot applicable to GCP, AWS\n",
    "remediation": "## Remediation\nMake sure you configure your the SBD msgwait to 2 * (SBD Watchdog Timeout) as recommended on the best practices.\n\nThe SBD is not used in GCP or AWS environments.\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#set-up-sbd-device\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#set-up-the-iscsi-target-server-sbd-device\n\nAWS:\n\nGCP:\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-verifying-the-sbd-device\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    #!/bin/bash\n    [ '{{ expected[name] }}' == '@@skip@@' ] \u0026\u0026 { echo '@@skip@@';  exit 0; }\n    if [ -f /etc/sysconfig/sbd ]; then\n      source /etc/sysconfig/sbd\n    else\n      exit 1\n    fi\n\n    IFS=';' sbdarray=( $SBD_DEVICE )\n\n    for i in \"${sbdarray[@]}\"\n      do\n        device=\"${i//[[:space:]]/}\"\n        msgwait=$(/usr/sbin/sbd -d ${device} dump | grep -oP 'Timeout \\(msgwait\\)  *: \\K\\d+')|| echo \"\"\n        watchdog=$(/usr/sbin/sbd -d ${device} dump | grep -oP 'Timeout \\(watchdog\\)  *: \\K\\d+')|| echo \"\"\n        declare -i msgwait\n        declare -i watchdog\n        let watchdog*=2\n        if [ $msgwait -lt $watchdog ]; then\n          exit 1\n        fi\n      done\n    exit 0\n\n  register: config_updated\n  check_mode: false\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "790926",
    "name": "1.5.2",
    "group": "Miscellaneous",
    "provider": "aws",
    "description": "The `hacluster` user password has been changed from the default value `linux`\n",
    "remediation": "## Abstract\nThe password of the `hacluster` user should be changed after setting up the cluster\n\n## Remediation\n```sudo passwd hacluster```\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/netweaver-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-initial-cluster-setup-using-ha-cluster-init\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    # if hacluster passwd is linux, fail\n    salt=$(sudo getent shadow hacluster | cut -d$ -f3)\n    epassword=$(sudo getent shadow hacluster | cut -d: -f2)\n    match=$(python3 -c 'import crypt; print(crypt.crypt(\"linux\", \"$6$'${salt}'\"))')\n    [[ ${match} == ${epassword} ]] \u0026\u0026 exit 1\n    exit 0\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "CAEFF1",
    "name": "2.2.1",
    "group": "OS and package versions",
    "provider": "aws",
    "description": "Operative system vendor is supported\n",
    "remediation": "## Abstract\nSAPHanaSR is only supported on SUSE Linux Enterprise Server for SAP Applications.\n\n## Remediation\nPlease use SUSE Linux Enterprise Server for SAP Applications.\n\n## Reference\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/sap-hana-high-availability\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-ha-cluster-configuration-on-sles.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-os-support\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-planning-the-installation\n",
    "implementation": "---\n\n- block:\n    - name: \"{{ name }} Post results\"\n      import_role:\n        name: post-results\n  vars:\n    status: \"{{ ansible_distribution is version(expected[name], '==') }}\"",
    "labels": "hana"
  },
  {
    "id": "D028B9",
    "name": "2.2.2",
    "group": "OS and package versions",
    "provider": "aws",
    "description": "Operative system version is supported\n",
    "remediation": "## Abstract\nYou need at least SUSE Linux Enterprise Server for SAP Applications 15 SP1 or newer\n\n## Remediation\nPlease install or upgrade to a supported OS version\n\n## Reference\n- https://documentation.suse.com/en-us/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/\n",
    "implementation": "---\n\n- block:\n    - name: \"{{ name }} Post results\"\n      import_role:\n        name: post-results\n  vars:\n    status: \"{{ ansible_distribution_version is version(expected[name], '\u003e=') }}\"",
    "labels": "hana"
  },
  {
    "id": "9FEFB0",
    "name": "2.2.3",
    "group": "OS and package versions",
    "provider": "aws",
    "description": "Pacemaker version is supported\n",
    "remediation": "## Abstract\nInstalled Pacemaker version must be equal or higher than 2.0.1\n\n## Remediation\nInstall or upgrade to a supported Pacemaker version\n\n## Reference\n- https://documentation.suse.com/en-us/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/\n",
    "implementation": "---\n\n- block:\n    - name: \"{{ name }} Post results\"\n      import_role:\n        name: post-results\n  vars:\n    status: \"{{ 'pacemaker' in ansible_facts.packages and ansible_facts.packages['pacemaker'][0].version is version(expected[name], '\u003e=') }}\"",
    "labels": "hana"
  },
  {
    "id": "9FAAD0",
    "name": "2.2.3.exclude",
    "group": "OS and package versions",
    "provider": "aws",
    "description": "Pacemaker version is not 2.0.3+20200511.2b248d828\n",
    "remediation": "## Abstract\nInstalled Pacemaker version must not be equal than 2.0.3+20200511.2b248d828\n\n## Remediation\nInstall or upgrade to a supported Pacemaker version\n\n## Reference\n- https://documentation.suse.com/en-us/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    # Check the pacemaker version IS NOT\n    # If not installed, exit with error\n    rpm -q --qf \"%{VERSION}\\n\" pacemaker || exit 2\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout is version(expected[name], '=')\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "hana"
  },
  {
    "id": "DC5429",
    "name": "2.2.4",
    "group": "OS and package versions",
    "provider": "aws",
    "description": "Corosync version is supported\n",
    "remediation": "## Abstract\nInstalled Corosync version must be equal or higher than 2.4.5\n\n## Remediation\nInstall or upgrade to a supported Corosync version\n\n## Reference\n- https://documentation.suse.com/en-us/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/\n",
    "implementation": "---\n\n- block:\n    - name: \"{{ name }} Post results\"\n      import_role:\n        name: post-results\n  vars:\n    status: \"{{ 'corosync' in ansible_facts.packages and ansible_facts.packages['corosync'][0].version is version(expected[name], '\u003e=') }}\"",
    "labels": "hana"
  },
  {
    "id": "222A57",
    "name": "2.2.5",
    "group": "OS and package versions",
    "provider": "aws",
    "description": "SBD version is supported\n",
    "remediation": "## Abstract\nInstalled SBD version must be equal or higher than 1.4.0\n\n## Remediation\nInstall or upgrade to a supported SBD version\n\n## Reference\n- https://documentation.suse.com/en-us/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/\n",
    "implementation": "---\n\n- block:\n    - name: \"{{ name }} Post results\"\n      import_role:\n        name: post-results\n  vars:\n    status: \"{{ 'sbd' in ansible_facts.packages and ansible_facts.packages['sbd'][0].version is version(expected[name], '\u003e=') }}\"",
    "labels": "hana"
  },
  {
    "id": "C3166E",
    "name": "2.2.5.exclude",
    "group": "OS and package versions",
    "provider": "aws",
    "description": "SBD version is not 1.4.0+20190326.c38c5e6\n",
    "remediation": "## Abstract\nInstalled SBD version must not be equal than 1.4.0+20190326.c38c5e6\n\n## Remediation\nInstall or upgrade to a supported SBD version\n\n## Reference\n- https://documentation.suse.com/en-us/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    # Check the sbd version IS NOT\n    # If not installed, exit with error\n    rpm -q --qf \"%{VERSION}\\n\" sbd || exit 2\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout is version(expected[name], '=')\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "hana"
  },
  {
    "id": "F50AF5",
    "name": "2.2.7",
    "group": "OS and package versions",
    "provider": "aws",
    "description": "Python3 version is supported\n",
    "remediation": "## Abstract\nInstalled Python3 version must be equal or higher than 3.6.5\n\n## Remediation\nInstall or upgrade to a supported Python3 version\n\n## Reference\n- https://documentation.suse.com/en-us/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/\n",
    "implementation": "---\n\n- block:\n    - name: \"{{ name }} Post results\"\n      import_role:\n        name: post-results\n  vars:\n    status: \"{{ 'python3' in ansible_facts.packages and ansible_facts.packages['python3'][0].version is version(expected[name], '\u003e=') }}\"",
    "labels": "hana"
  },
  {
    "id": "156F64",
    "name": "1.1.1",
    "group": "Corosync",
    "provider": "azure",
    "description": "Corosync `token` timeout is set to `30000`\n",
    "remediation": "## Abstract\nThe value of the Corosync `token` timeout is not set as recommended.\n\n## Remediation\n\nAdjust the corosync `token` timeout as recommended on the best practices, and reload the corosync configuration\n\n1. Set the correct `token` timeout in the totem session in the corosync config file `/etc/corosync/corosync.conf`. This action must be repeated in all nodes of the cluster.\n   ```\n   [...]\n   totem { \n          token: \u003ctimeout value\u003e \n         }\n   [...]\n   ```   \n2. Reload the corosync configuration:\n   `crm corosync reload`\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nGCP: \n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles#create_the_corosync_configuration_files\n\nAWS:\n\n  -\thttps://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    #!/usr/bin/bash\n    # test fails, if corosync.conf file is even missing\n    [ -f /etc/corosync/corosync.conf ] || exit 1\n    TOKEN=$(\n        perl  -e '\n        while (\u003c\u003e) {\n            # filter out lines beginnig with hash sign (optionally after whitespace)\n            if (! /^\\s*#/ ) {\n                $cont .= $_;\n            }\n        }\n        # search for all directives totem { ... }\n        while ($cont =~ m/\\btotem\\s*{[^}]*}/gs) {\n            my $totemStr=$\u0026;\n            # filter for key value pairs for token\n            if ($totemStr =~ /token:\\s*(\\S*)\\s*/g) {         \n                print \"$1\";\n            }\n        }\n        printf \"\\n\"' \u003c /etc/corosync/corosync.conf\n    )\n    [[ \"$TOKEN\" == \"{{ expected[name] }}\" ]] \u0026\u0026 exit 0\n    exit 1\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "53D035",
    "name": "1.1.1.runtime",
    "group": "Corosync",
    "provider": "azure",
    "description": "Corosync is running with `token` timeout set to `30000`\n",
    "remediation": "## Abstract\nThe runtime value of the Corosync `token` timeout is not set as recommended.\n\n## Remediation\n\nAdjust the corosync `token` timeout as recommended on the best practices, and reload the corosync configuration\n\n\n1. Set the correct `token` timeout in the totem session in the corosync config file `/etc/corosync/corosync.conf`. This action must be repeated in all nodes of the cluster.\n   ```\n   [...]\n   totem { \n          token: \u003ctimeout value\u003e \n         }\n   [...]\n   ```   \n2. Reload the corosync configuration:\n   `crm corosync reload`\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles#create_the_corosync_configuration_files\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: 'corosync-cmapctl | grep \"runtime.config.totem.token (u32) = \" | sed \"s/^.*= //\"'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected['1.1.1']\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "A1244C",
    "name": "1.1.2",
    "group": "Corosync",
    "provider": "azure",
    "description": "Corosync `consensus` timeout is set to `36000`\n",
    "remediation": "## Remediation\nAdjust the Corosync `consensus` timeout as recommended by the Azure best practices.\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  lineinfile:\n    path: /etc/corosync/corosync.conf\n    regexp: '^(\\s*){{ key_name }}:(\\s*)\\S*(\\s)*$'\n    line: '\\g\u003c1\u003e{{ key_name }}:\\g\u003c2\u003e{{ expected[name] }}\\g\u003c3\u003e'\n    backrefs: yes\n    #insertafter: 'totem {'\n  register: config_updated\n  when: ansible_check_mode\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "FB0E0D",
    "name": "1.1.2.runtime",
    "group": "Corosync",
    "provider": "azure",
    "description": "Corosync is running with `consensus` timeout set to `36000`\n",
    "remediation": "## Abstract\nThe runtime value of the Corosync `consensus` timeout is not set as recommended.\n\n## Remediation\nAdjust the corosync `consensus` timeout as recommended by the Azure best practices, and reload the corosync service.\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: 'corosync-cmapctl | grep \"runtime.config.totem.consensus (u32) = \" | sed \"s/^.*= //\"'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected['1.1.2']\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "845CC9",
    "name": "1.1.3",
    "group": "Corosync",
    "provider": "azure",
    "description": "Corosync `max_messages` is set to `20`\n",
    "remediation": "## Remediation\nAdjust the Corosync `max_messages` parameter as recommended by the Azure best practices.\n\n## References\nAZURE:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  lineinfile:\n    path: /etc/corosync/corosync.conf\n    regexp: '^(\\s*){{ key_name }}:(\\s*)\\S*(\\s)*$'\n    line: '\\g\u003c1\u003e{{ key_name }}:\\g\u003c2\u003e{{ expected[name] }}\\g\u003c3\u003e'\n    backrefs: yes\n    #insertafter: 'totem {'\n  register: config_updated\n  when: ansible_check_mode\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "00081D",
    "name": "1.1.3.runtime",
    "group": "Corosync",
    "provider": "azure",
    "description": "Corosync is running with `max_messages` set to `20`\n",
    "remediation": "## Abstract\nThe runtime value of the Corosync `max_messages` parameter is not set as recommended.\n\n## Remediation\nAdjust the corosync `max_messages` parameter as recommended by the Azure best practices, and reload the corosync service.\n\n## References\nAZURE:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: 'corosync-cmapctl | grep \"runtime.config.totem.max_messages (u32) = \" | sed \"s/^.*= //\"'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected['1.1.3']\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "24ABCB",
    "name": "1.1.4",
    "group": "Corosync",
    "provider": "azure",
    "description": "Corosync `join` is set to `60`\n",
    "remediation": "## Remediation\nAdjust the Corosync `join` parameter as recommended by the Azure best practices.\n\n## References\nAZURE:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  lineinfile:\n    path: /etc/corosync/corosync.conf\n    regexp: '^(\\s*){{ key_name }}:(\\s*)\\S*(\\s)*$'\n    line: '\\g\u003c1\u003e{{ key_name }}:\\g\u003c2\u003e{{ expected[name] }}\\g\u003c3\u003e'\n    backrefs: yes\n    #insertafter: 'totem {'\n  register: config_updated\n  when: ansible_check_mode\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "822E47",
    "name": "1.1.4.runtime",
    "group": "Corosync",
    "provider": "azure",
    "description": "Corosync is running with `join` set to `60`\n",
    "remediation": "## Abstract\nThe runtime value of the Corosync `join` parameter is not set as recommended.\n\n## Remediation\nAdjust the corosync `join` parameter as recommended by the Azure best practices, and reload the corosync service.\n\n## References\nAZURE:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: 'corosync-cmapctl | grep \"runtime.config.totem.join (u32) = \" | sed \"s/^.*= //\"'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected['1.1.4']\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "21FCA6",
    "name": "1.1.5",
    "group": "Corosync",
    "provider": "azure",
    "description": "Corosync `token_retransmits_before_loss_const` is set to: `10`\n",
    "remediation": "## Remediation\nAdjust the corosync `token_retransmits_before_loss_const` parameter to `10` as recommended by the Azure best practices.\n\n## References\nAZURE:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  lineinfile:\n    path: /etc/corosync/corosync.conf\n    regexp: '^(\\s*){{ key_name }}:(\\s*)\\S*(\\s)*$'\n    line: '\\g\u003c1\u003e{{ key_name }}:\\g\u003c2\u003e{{ expected[name] }}\\g\u003c3\u003e'\n    backrefs: yes\n    #insertafter: 'totem {'\n  register: config_updated\n  when: ansible_check_mode\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "15F7A8",
    "name": "1.1.5.runtime",
    "group": "Corosync",
    "provider": "azure",
    "description": "Corosync is running with `token_retransmits_before_loss_const` set to `10`\n",
    "remediation": "## Abstract\nThe runtime value of the corosync `token_retransmits_before_loss_const` parameter is not set as recommended\n\n## Remediation\nAdjust the corosync `token_retransmits_before_loss_const` parameter as recommended on the Azure best practices, and reload the corosync service.\n\n## References\nAZURE:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: 'corosync-cmapctl | grep \"runtime.config.totem.token_retransmits_before_loss_const (u32) = \" | sed \"s/^.*= //\"'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected['1.1.5']\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "33403D",
    "name": "1.1.6",
    "group": "Corosync",
    "provider": "azure",
    "description": "Corosync `transport` is set to `udpu`\n",
    "remediation": "## Remediation\nTo change the corosync MCAST transport to UCAST edit the /etc/corosync/corosync.conf\nas in the example\n```\n    max_messages: 20\n    interface {\n        ringnumber: 0\n-       bindnetaddr: 10.162.32.167\n-       mcastaddr: 239.11.100.41\n        mcastport: 5405\n        ttl: 1\n    }\n+   transport: udpu\n...\n+nodelist {\n+       node {\n+               ring0_addr: 10.162.32.167\n+               nodeid: 1\n+       }\n+\n+       node {\n+               ring0_addr: 10.162.32.89\n+               nodeid: 2\n+       }\n+\n+}\n```\n1. stop the already running cluster by using **systemctl stop pacemaker**\n2. In the totem section, in the interface subsection remove the\nkeys-value pairs **bindnetaddr** and **mcastaddr**\n3. In the totem section add key-value pair **transport: udpu**\n4. Add section nodelist and subsections node for each nodes of the\ncluster, where the **ring0_addr** is the IP address of the node\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles#create_the_corosync_configuration_files\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-adapting-the-corosync-and-sbd-configuration\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  lineinfile:\n    path: /etc/corosync/corosync.conf\n    regexp: '^(\\s*){{ key_name }}:(\\s*)\\S*(\\s)*$'\n    line: '\\g\u003c1\u003e{{ key_name }}:\\g\u003c2\u003e{{ expected[name] }}\\g\u003c3\u003e'\n    backrefs: yes\n    #insertafter: 'totem {'\n  register: config_updated\n  when: ansible_check_mode\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "7E0221",
    "name": "1.1.6.runtime",
    "group": "Corosync",
    "provider": "azure",
    "description": "Corosync is running with `transport` set to `udpu`\n",
    "remediation": "## Remediation\nTo change the corosync MCAST transport to UCAST edit the /etc/corosync/corosync.conf\nas in the example\n```\n    max_messages: 20\n    interface {\n        ringnumber: 0\n-       bindnetaddr: 10.162.32.167\n-       mcastaddr: 239.11.100.41\n        mcastport: 5405\n        ttl: 1\n    }\n+   transport: udpu\n...\n+nodelist {\n+       node {\n+               ring0_addr: 10.162.32.167\n+               nodeid: 1\n+       }\n+\n+       node {\n+               ring0_addr: 10.162.32.89\n+               nodeid: 2\n+       }\n+\n+}\n```\n1. stop the already running cluster by using **systemctl stop pacemaker**\n2. In the totem section, in the interface subsection remove the\nkeys-value pairs **bindnetaddr** and **mcastaddr**\n3. In the totem section add key-value pair **transport: udpu**\n4. Add section nodelist and subsections node for each nodes of the\ncluster, where the **ring0_addr** is the IP address of the node\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles#create_the_corosync_configuration_files\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-adapting-the-corosync-and-sbd-configuration\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: 'corosync-cmapctl | grep \"totem.transport (str) = \" | sed \"s/.*= //\"'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected['1.1.6']\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "C620DC",
    "name": "1.1.7",
    "group": "Corosync",
    "provider": "azure",
    "description": "Corosync `expected_votes` is set to `2`\n",
    "remediation": "## Remediation\nAdjust the corosync `expected_votes` parameter to `2` to make sure pacemaker calculates the actions properly for a two-node cluster.\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  lineinfile:\n    path: /etc/corosync/corosync.conf\n    regexp: '^(\\s*){{ key_name }}:(\\s*)\\S*(\\s)*$'\n    line: '\\g\u003c1\u003e{{ key_name }}:\\g\u003c2\u003e{{ expected[name] }}\\g\u003c3\u003e'\n    backrefs: yes\n    #insertafter: 'quorum {'\n  register: config_updated\n  when: ansible_check_mode\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "6E9B82",
    "name": "1.1.8",
    "group": "Corosync",
    "provider": "azure",
    "description": "Corosync `two_node` is set to `1`\n",
    "remediation": "## Abstract\nThe runtime value of the corosync `two_node` parameter is not set as recommended.\n\n## Remediation\nAdjust the corosync two_node parameter to `1` to make sure Pacemaker calculates the actions properly for a two-node cluster.\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  lineinfile:\n    path: /etc/corosync/corosync.conf\n    regexp: '^(\\s*){{ key_name }}:(\\s*)\\S*(\\s)*$'\n    line: '\\g\u003c1\u003e{{ key_name }}:\\g\u003c2\u003e{{ expected[name] }}\\g\u003c3\u003e'\n    backrefs: yes\n    #insertafter: 'quorum {'\n  register: config_updated\n  when: ansible_check_mode\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "D78671",
    "name": "1.1.8.runtime",
    "group": "Corosync",
    "provider": "azure",
    "description": "Corosync is running with `two_node` set to `1`\n",
    "remediation": "## Abstract\nThe runtime value of the corosync `two_node` parameter is not set as recommended.\n\n## Remediation\nAdjust the corosync `two_node` parameter to `1` to make sure Pacemaker calculates the actions properly for a two-node cluster,\nand reload the Corosync service.\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: 'corosync-cmapctl | grep \"runtime.votequorum.two_node (u8) = \" | sed \"s/^.*= //\"'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected['1.1.8']\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "DA114A",
    "name": "1.1.9",
    "group": "Corosync",
    "provider": "azure",
    "description": "Corosync has at least 2 rings configured\n",
    "remediation": "## Abstract\nIt is strongly recommended to add a second ring to the corosync communication.\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n - section 9.1.3 in https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-adapting-the-corosync-and-sbd-configuration\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    RING_CHECK=$(\n        perl  -n -e '\n        my $cont;\n        while (\u003c\u003e) {\n            # filter out lines beginnig with hash sign (optionally after whitespace)\n            if (! /^\\W*#/ ) {\n                $cont .= $_;\n            }\n        }\n        my $node=0;\n        # search for all (sub)directives node { ... }\n        while ($cont =~ m/\\bnode\\W*{[^}]*}/gs) {\n            $node++;\n            my $nodeStr=$\u0026;\n            # filter for key value pairs for ring adresses for ring0 and ring1\n            if ($nodeStr =~ /(ring0_addr:\\W*(.*))\\W*(ring1_addr:\\W*(.*))?\\W*/g) {\n                if ( $2 ne \"\" and $4 ne \"\" ) {\n                    # report a \"2\", if both attributes are set with values\n                    print \"2\"\n                } elsif ( $2 ne \"\" or $4 ne \"\" ) {\n                    print \"1\"\n                } else {\n                    print \"0\"\n                }\n            }\n        }\n        printf \"\\n\"' \u003c /etc/corosync/corosync.conf\n    )\n    #echo \"RING_CHECK=$RING_CHECK\" \u003e /tmp/test119\n    [[ \"$RING_CHECK\" == \"{{ expected[name] }}\" ]] \u0026\u0026 exit 0\n    exit 1\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "32CFC6",
    "name": "1.1.9.runtime",
    "group": "Corosync",
    "provider": "azure",
    "description": "Corosync is running with at least 2 rings\n",
    "remediation": "## Abstract\nIt is strongly recommended to add a second ring to the corosync communication.\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n - section 9.1.3 in https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-adapting-the-corosync-and-sbd-configuration\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    INTERFACE_COUNT=$(corosync-cmapctl | grep totem.interface\\\\..*\\.bindnetaddr | wc -l)\n    [[ ${INTERFACE_COUNT} -eq \"2\" ]] \u0026\u0026 exit 0\n    exit 1\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "205AF7",
    "name": "1.2.1",
    "group": "Pacemaker",
    "provider": "azure",
    "description": "Fencing is enabled in the cluster attributes\n",
    "remediation": "## Abstract\nFencing is mandatory to guarantee data integrity for your SAP Applications.\nRunning a HA Cluster without fencing is not supported and might cause data loss.\n\n## Remediation\nExecute the following command to enable it:\n```\ncrm configure property stonith-enabled=true\n```\n\n## References\nAZURE:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#create-a-stonith-device-on-the-pacemaker-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-resources.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles#configure_the_general_cluster_properties\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-cluster-bootstrap-and-more\n  - https://documentation.suse.com/sle-ha/15-SP3/html/SLE-HA-all/cha-ha-fencing.html#sec-ha-fencing-recommend\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  command: 'crm_attribute -t crm_config -G -n stonith-enabled --quiet'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected[name]\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "373DB8",
    "name": "1.2.2",
    "group": "Pacemaker",
    "provider": "azure",
    "description": "Cluster fencing timeout is configured correctly\n",
    "remediation": "## Abstract\nThe fencing timeout (`stonith-timeout`) determines the time Pacemaker will wait for fencing to succeed.\nThe recommended values on Azure are `144` seconds for SBD only or `900` seconds when using SBD combined with the Azure Fence agent.\n\n## Remediation\nExecute the following command to adjust the timeout for your usecase:\n```crm configure property stonith-timeout=144```\nor\n```crm configure property stonith-timeout=900```\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#create-a-stonith-device-on-the-pacemaker-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-resources.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles#configure_the_general_cluster_properties\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-cluster-bootstrap-and-more\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n   timeout=$(crm_attribute -t crm_config -G -n stonith-timeout --quiet | sed -e 's/s$//')\n   #\n   # for aws and gcp we might need additional expected vars (name + fence_aws_...)\n   #\n   if [[cibadmin -Q --xpath \"//primitive[@type='fence_azure_arm']/@type\" \u003e /dev/null 2\u003e\u00261 ]]; then\n     exit $([[ \"${timeout}\" -eq {{ expected[name + '.fence_azure_arm'] }} ]])\n   else\n     exit $([[ \"${timeout}\" -ge {{ expected[name + '.sbd'] }} ]])\n   fi\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "0B6DB2",
    "name": "1.3.1",
    "group": "SBD",
    "provider": "azure",
    "description": "`SBD_PACEMAKER` value is correctly set in SBD configuration\n\nNot applicable for GCP, AWS\n",
    "remediation": "## Abstract\nFor proper SBD fencing, make sure that the integration with Pacemaker is enabled.\n**IMPORTANT**: Always verify these steps in a testing environment before doing so in production ones!\n\nThe SBD is not used in GCP or AWS environments.\n## Remediation\nRun the following commands in order:\n\n1. Put cluster into maintenance mode:\n   ```crm configure property maintenance-mode=true```\n2. Stop the cluster:\n   ```crm cluster stop```\n3. Set the SBD_PACEMAKER parameter to `yes` on `/etc/sysconfig/sbd`:\n   ```\n   [...]\n   SBD_PACEMAKER=\"yes\"\n   [...]\n   ```\n4. Restart the cluster:\n   ```crm cluster start```\n5. Put cluster out of maintenance mode\n   ```crm configure property maintenance-mode=false```\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#set-up-the-iscsi-target-server-sbd-device\n\nAWS:\n\n\nGCP:\n\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sle-ha/15-SP3/html/SLE-HA-all/cha-ha-storage-protect.html\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-1.11.5.5.4.4\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n      #!/bin/bash\n      [ '{{ expected[name] }}' == '@@skip@@' ] \u0026\u0026 exit 0\n      source /etc/sysconfig/sbd || exit 1\n      [ \"${SBD_PACEMAKER}\" == '{{ expected[name] }}' ] || exit 1\n      exit 0\n\n  register: config_updated\n  check_mode: false\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "49591F",
    "name": "1.3.2",
    "group": "SBD",
    "provider": "azure",
    "description": "`SBD_STARTMODE` is set to `always`\n\nNot applicable for GCP, AWS\n",
    "remediation": "## Abstract\nIf not set to always, SBD will not automatically start if the node was previously fenced as it will expect the cluster in a clean state.\n**IMPORTANT**: Always verify these steps in a testing environment before doing so in production ones!\n\nThe SBD is not used in GCP or AWS environments.\n## Remediation\nRun the following commands in order:\n\n1. Put cluster into maintenance mode:\n   ```crm configure property maintenance-mode=true```\n2. Stop the cluster:\n   ```crm cluster stop```\n2. Set the SBD_STARTMODE parameter to `always` on `/etc/sysconfig/sbd`:\n   ```\n   [...]\n   SBD_STARTMODE=\"always\"\n   [...]\n   ```\n3. Restart the cluster:\n   ```crm cluster start```\n4. Put cluster out of maintenance mode:\n   ```crm configure property maintenance-mode=false```\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#set-up-the-iscsi-target-server-sbd-device\n\nAWS:\n\nGCP:\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-1.11.5.5.4.4\n  - https://documentation.suse.com/sle-ha/15-SP3/html/SLE-HA-all/cha-ha-storage-protect.html\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  check_mode: false\n  shell: |\n      #!/bin/bash\n      [ '{{ expected[name] }}' == '@@skip@@' ] \u0026\u0026 exit 0\n      source /etc/sysconfig/sbd || exit 1\n      [ \"${SBD_STARTMODE}\" == '{{ expected[name] }}' ] || exit 1\n      exit 0\n\n  register: config_updated\n  check_mode: false\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "816815",
    "name": "1.3.3",
    "group": "SBD",
    "provider": "azure",
    "description": "SBD service is enabled\n\nNot applicable to GCP, AWS\n",
    "remediation": "## Abstract\nIf not enabled, SBD service will not start automatically after reboots, affecting the correct cluster startup.\n\nThe SBD is not used in GCP or AWS environments.\n## Remediation\nTo enable the service, run:\n```\nsystemctl enable sbd\n```\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#set-up-the-iscsi-target-server-sbd-device\n\nAWS:\n\nGCP:\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sle-ha/15-SP3/html/SLE-HA-all/cha-ha-storage-protect.html#pro-ha-storage-protect-sbd-services\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  systemd:\n    name: sbd\n    enabled: true\n  register: config_updated\n  when:\n    - ansible_check_mode\n    - expected[name]!=\"@@skip@@\"\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n    - expected[name]!=\"@@skip@@\"\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "61451E",
    "name": "1.3.4",
    "group": "SBD",
    "provider": "azure",
    "description": "Multiple SBD devices are configured\n\nNot applicable to GCP, AWS\n",
    "remediation": "## Abstract\nIt is recommended to configure 3 SBD devices for production environments.\n\nThe SBD is not used in GCP or AWS environments.\n\n## References\nAzure:\n\n  -  https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#set-up-sbd-device\n\nAWS:\n\nGCP:\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#cha.hana-sr.scenario\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    #!/bin/bash\n    [ '{{ expected[name] }}' == '@@skip@@' ] \u0026\u0026 { echo '@@skip@@';  exit 0; }\n    file=\"/etc/sysconfig/sbd\"\n    source \"$file\" || exit 1\n    COUNT=$(perl -e '\n          my $sbd_device=\"'$SBD_DEVICE'\";\n          my $count;\n          my @paths=split(\";\", $sbd_device);\n          if ( $paths[-1] ne \"\" ) {\n              $count = $#paths + 1;\n          } else {\n              $count = $#paths;\n          }\n          printf \"%i\\n\",  $count\n        ')\n    [[ \"${COUNT}\" == {{ expected[name] }} ]] \u0026\u0026 exit 0\n    exit 1\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "B089BE",
    "name": "1.3.5",
    "group": "SBD",
    "provider": "azure",
    "description": "SBD watchdog timeout is set to `60`\n\nNot applicable to GCP, AWS\n",
    "remediation": "## Remediation\nMake sure you configure your SBD Watchdog Timeout to `60` seconds as recommended on the best practices.\n\nThe SBD is not used in GCP or AWS environments.\n\n## References\nAzure:\n\n  -  https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#set-up-sbd-device\n\nAWS:\n\nGCP:\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-cluster-bootstrap-and-more\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    [ '{{ expected[name] }}' == '@@skip@@' ] \u0026\u0026 { echo '@@skip@@';  exit 0; }\n    DEF_WDTIMEOUT={{ expected[name] }}\n    result_wdtimeout=${DEF_WDTIMEOUT}\n\n    if [ -f /etc/sysconfig/sbd ]; then\n      source /etc/sysconfig/sbd\n    else\n      exit 1\n    fi\n\n    IFS=';' sbdarray=( $SBD_DEVICE )\n\n    for i in \"${sbdarray[@]}\"\n    do\n      device=\"${i//[[:space:]]/}\"\n      wdtimeout=$(/usr/sbin/sbd -d ${device} dump | grep -oP 'Timeout \\(watchdog\\)  *: \\K\\d+')|| echo \"\"\n      if [[ \"${wdtimeout}\" -ne \"${DEF_WDTIMEOUT}\" ]]; then\n        result_wdtimeout=\"${wdtimeout}\"\n      fi\n    done\n    echo \"${result_wdtimeout}\"\n\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected[name]\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "68626E",
    "name": "1.3.6",
    "group": "SBD",
    "provider": "azure",
    "description": "SBD `msgwait` timeout value is two times the watchdog timeout\n\nNot applicable to GCP, AWS\n",
    "remediation": "## Remediation\nMake sure you configure your the SBD msgwait to 2 * (SBD Watchdog Timeout) as recommended on the best practices.\n\nThe SBD is not used in GCP or AWS environments.\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#set-up-sbd-device\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#set-up-the-iscsi-target-server-sbd-device\n\nAWS:\n\nGCP:\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-verifying-the-sbd-device\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    #!/bin/bash\n    [ '{{ expected[name] }}' == '@@skip@@' ] \u0026\u0026 { echo '@@skip@@';  exit 0; }\n    if [ -f /etc/sysconfig/sbd ]; then\n      source /etc/sysconfig/sbd\n    else\n      exit 1\n    fi\n\n    IFS=';' sbdarray=( $SBD_DEVICE )\n\n    for i in \"${sbdarray[@]}\"\n      do\n        device=\"${i//[[:space:]]/}\"\n        msgwait=$(/usr/sbin/sbd -d ${device} dump | grep -oP 'Timeout \\(msgwait\\)  *: \\K\\d+')|| echo \"\"\n        watchdog=$(/usr/sbin/sbd -d ${device} dump | grep -oP 'Timeout \\(watchdog\\)  *: \\K\\d+')|| echo \"\"\n        declare -i msgwait\n        declare -i watchdog\n        let watchdog*=2\n        if [ $msgwait -lt $watchdog ]; then\n          exit 1\n        fi\n      done\n    exit 0\n\n  register: config_updated\n  check_mode: false\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "790926",
    "name": "1.5.2",
    "group": "Miscellaneous",
    "provider": "azure",
    "description": "The `hacluster` user password has been changed from the default value `linux`\n",
    "remediation": "## Abstract\nThe password of the `hacluster` user should be changed after setting up the cluster\n\n## Remediation\n```sudo passwd hacluster```\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/netweaver-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-initial-cluster-setup-using-ha-cluster-init\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    # if hacluster passwd is linux, fail\n    salt=$(sudo getent shadow hacluster | cut -d$ -f3)\n    epassword=$(sudo getent shadow hacluster | cut -d: -f2)\n    match=$(python3 -c 'import crypt; print(crypt.crypt(\"linux\", \"$6$'${salt}'\"))')\n    [[ ${match} == ${epassword} ]] \u0026\u0026 exit 1\n    exit 0\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "CAEFF1",
    "name": "2.2.1",
    "group": "OS and package versions",
    "provider": "azure",
    "description": "Operative system vendor is supported\n",
    "remediation": "## Abstract\nSAPHanaSR is only supported on SUSE Linux Enterprise Server for SAP Applications.\n\n## Remediation\nPlease use SUSE Linux Enterprise Server for SAP Applications.\n\n## Reference\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/sap-hana-high-availability\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-ha-cluster-configuration-on-sles.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-os-support\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-planning-the-installation\n",
    "implementation": "---\n\n- block:\n    - name: \"{{ name }} Post results\"\n      import_role:\n        name: post-results\n  vars:\n    status: \"{{ ansible_distribution is version(expected[name], '==') }}\"",
    "labels": "hana"
  },
  {
    "id": "D028B9",
    "name": "2.2.2",
    "group": "OS and package versions",
    "provider": "azure",
    "description": "Operative system version is supported\n",
    "remediation": "## Abstract\nYou need at least SUSE Linux Enterprise Server for SAP Applications 15 SP1 or newer\n\n## Remediation\nPlease install or upgrade to a supported OS version\n\n## Reference\n- https://documentation.suse.com/en-us/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/\n",
    "implementation": "---\n\n- block:\n    - name: \"{{ name }} Post results\"\n      import_role:\n        name: post-results\n  vars:\n    status: \"{{ ansible_distribution_version is version(expected[name], '\u003e=') }}\"",
    "labels": "hana"
  },
  {
    "id": "9FEFB0",
    "name": "2.2.3",
    "group": "OS and package versions",
    "provider": "azure",
    "description": "Pacemaker version is supported\n",
    "remediation": "## Abstract\nInstalled Pacemaker version must be equal or higher than 2.0.1\n\n## Remediation\nInstall or upgrade to a supported Pacemaker version\n\n## Reference\n- https://documentation.suse.com/en-us/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/\n",
    "implementation": "---\n\n- block:\n    - name: \"{{ name }} Post results\"\n      import_role:\n        name: post-results\n  vars:\n    status: \"{{ 'pacemaker' in ansible_facts.packages and ansible_facts.packages['pacemaker'][0].version is version(expected[name], '\u003e=') }}\"",
    "labels": "hana"
  },
  {
    "id": "9FAAD0",
    "name": "2.2.3.exclude",
    "group": "OS and package versions",
    "provider": "azure",
    "description": "Pacemaker version is not 2.0.3+20200511.2b248d828\n",
    "remediation": "## Abstract\nInstalled Pacemaker version must not be equal than 2.0.3+20200511.2b248d828\n\n## Remediation\nInstall or upgrade to a supported Pacemaker version\n\n## Reference\n- https://documentation.suse.com/en-us/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    # Check the pacemaker version IS NOT\n    # If not installed, exit with error\n    rpm -q --qf \"%{VERSION}\\n\" pacemaker || exit 2\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout is version(expected[name], '=')\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "hana"
  },
  {
    "id": "DC5429",
    "name": "2.2.4",
    "group": "OS and package versions",
    "provider": "azure",
    "description": "Corosync version is supported\n",
    "remediation": "## Abstract\nInstalled Corosync version must be equal or higher than 2.4.5\n\n## Remediation\nInstall or upgrade to a supported Corosync version\n\n## Reference\n- https://documentation.suse.com/en-us/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/\n",
    "implementation": "---\n\n- block:\n    - name: \"{{ name }} Post results\"\n      import_role:\n        name: post-results\n  vars:\n    status: \"{{ 'corosync' in ansible_facts.packages and ansible_facts.packages['corosync'][0].version is version(expected[name], '\u003e=') }}\"",
    "labels": "hana"
  },
  {
    "id": "222A57",
    "name": "2.2.5",
    "group": "OS and package versions",
    "provider": "azure",
    "description": "SBD version is supported\n",
    "remediation": "## Abstract\nInstalled SBD version must be equal or higher than 1.4.0\n\n## Remediation\nInstall or upgrade to a supported SBD version\n\n## Reference\n- https://documentation.suse.com/en-us/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/\n",
    "implementation": "---\n\n- block:\n    - name: \"{{ name }} Post results\"\n      import_role:\n        name: post-results\n  vars:\n    status: \"{{ 'sbd' in ansible_facts.packages and ansible_facts.packages['sbd'][0].version is version(expected[name], '\u003e=') }}\"",
    "labels": "hana"
  },
  {
    "id": "C3166E",
    "name": "2.2.5.exclude",
    "group": "OS and package versions",
    "provider": "azure",
    "description": "SBD version is not 1.4.0+20190326.c38c5e6\n",
    "remediation": "## Abstract\nInstalled SBD version must not be equal than 1.4.0+20190326.c38c5e6\n\n## Remediation\nInstall or upgrade to a supported SBD version\n\n## Reference\n- https://documentation.suse.com/en-us/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    # Check the sbd version IS NOT\n    # If not installed, exit with error\n    rpm -q --qf \"%{VERSION}\\n\" sbd || exit 2\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout is version(expected[name], '=')\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "hana"
  },
  {
    "id": "F50AF5",
    "name": "2.2.7",
    "group": "OS and package versions",
    "provider": "azure",
    "description": "Python3 version is supported\n",
    "remediation": "## Abstract\nInstalled Python3 version must be equal or higher than 3.6.5\n\n## Remediation\nInstall or upgrade to a supported Python3 version\n\n## Reference\n- https://documentation.suse.com/en-us/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/\n",
    "implementation": "---\n\n- block:\n    - name: \"{{ name }} Post results\"\n      import_role:\n        name: post-results\n  vars:\n    status: \"{{ 'python3' in ansible_facts.packages and ansible_facts.packages['python3'][0].version is version(expected[name], '\u003e=') }}\"",
    "labels": "hana"
  },
  {
    "id": "156F64",
    "name": "1.1.1",
    "group": "Corosync",
    "provider": "default",
    "description": "Corosync `token` timeout is set to `5000`\n",
    "remediation": "## Abstract\nThe value of the Corosync `token` timeout is not set as recommended.\n\n## Remediation\n\nAdjust the corosync `token` timeout as recommended on the best practices, and reload the corosync configuration\n\n1. Set the correct `token` timeout in the totem session in the corosync config file `/etc/corosync/corosync.conf`. This action must be repeated in all nodes of the cluster.\n   ```\n   [...]\n   totem { \n          token: \u003ctimeout value\u003e \n         }\n   [...]\n   ```   \n2. Reload the corosync configuration:\n   `crm corosync reload`\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nGCP: \n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles#create_the_corosync_configuration_files\n\nAWS:\n\n  -\thttps://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    #!/usr/bin/bash\n    # test fails, if corosync.conf file is even missing\n    [ -f /etc/corosync/corosync.conf ] || exit 1\n    TOKEN=$(\n        perl  -e '\n        while (\u003c\u003e) {\n            # filter out lines beginnig with hash sign (optionally after whitespace)\n            if (! /^\\s*#/ ) {\n                $cont .= $_;\n            }\n        }\n        # search for all directives totem { ... }\n        while ($cont =~ m/\\btotem\\s*{[^}]*}/gs) {\n            my $totemStr=$\u0026;\n            # filter for key value pairs for token\n            if ($totemStr =~ /token:\\s*(\\S*)\\s*/g) {         \n                print \"$1\";\n            }\n        }\n        printf \"\\n\"' \u003c /etc/corosync/corosync.conf\n    )\n    [[ \"$TOKEN\" == \"{{ expected[name] }}\" ]] \u0026\u0026 exit 0\n    exit 1\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "53D035",
    "name": "1.1.1.runtime",
    "group": "Corosync",
    "provider": "default",
    "description": "Corosync is running with `token` timeout set to `5000`\n",
    "remediation": "## Abstract\nThe runtime value of the Corosync `token` timeout is not set as recommended.\n\n## Remediation\n\nAdjust the corosync `token` timeout as recommended on the best practices, and reload the corosync configuration\n\n\n1. Set the correct `token` timeout in the totem session in the corosync config file `/etc/corosync/corosync.conf`. This action must be repeated in all nodes of the cluster.\n   ```\n   [...]\n   totem { \n          token: \u003ctimeout value\u003e \n         }\n   [...]\n   ```   \n2. Reload the corosync configuration:\n   `crm corosync reload`\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles#create_the_corosync_configuration_files\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: 'corosync-cmapctl | grep \"runtime.config.totem.token (u32) = \" | sed \"s/^.*= //\"'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected['1.1.1']\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "A1244C",
    "name": "1.1.2",
    "group": "Corosync",
    "provider": "default",
    "description": "Corosync `consensus` timeout is set to `6000`\n",
    "remediation": "## Remediation\nAdjust the Corosync `consensus` timeout as recommended by the Azure best practices.\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  lineinfile:\n    path: /etc/corosync/corosync.conf\n    regexp: '^(\\s*){{ key_name }}:(\\s*)\\S*(\\s)*$'\n    line: '\\g\u003c1\u003e{{ key_name }}:\\g\u003c2\u003e{{ expected[name] }}\\g\u003c3\u003e'\n    backrefs: yes\n    #insertafter: 'totem {'\n  register: config_updated\n  when: ansible_check_mode\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "FB0E0D",
    "name": "1.1.2.runtime",
    "group": "Corosync",
    "provider": "default",
    "description": "Corosync is running with `consensus` timeout set to `6000`\n",
    "remediation": "## Abstract\nThe runtime value of the Corosync `consensus` timeout is not set as recommended.\n\n## Remediation\nAdjust the corosync `consensus` timeout as recommended by the Azure best practices, and reload the corosync service.\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: 'corosync-cmapctl | grep \"runtime.config.totem.consensus (u32) = \" | sed \"s/^.*= //\"'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected['1.1.2']\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "845CC9",
    "name": "1.1.3",
    "group": "Corosync",
    "provider": "default",
    "description": "Corosync `max_messages` is set to `20`\n",
    "remediation": "## Remediation\nAdjust the Corosync `max_messages` parameter as recommended by the Azure best practices.\n\n## References\nAZURE:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  lineinfile:\n    path: /etc/corosync/corosync.conf\n    regexp: '^(\\s*){{ key_name }}:(\\s*)\\S*(\\s)*$'\n    line: '\\g\u003c1\u003e{{ key_name }}:\\g\u003c2\u003e{{ expected[name] }}\\g\u003c3\u003e'\n    backrefs: yes\n    #insertafter: 'totem {'\n  register: config_updated\n  when: ansible_check_mode\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "00081D",
    "name": "1.1.3.runtime",
    "group": "Corosync",
    "provider": "default",
    "description": "Corosync is running with `max_messages` set to `20`\n",
    "remediation": "## Abstract\nThe runtime value of the Corosync `max_messages` parameter is not set as recommended.\n\n## Remediation\nAdjust the corosync `max_messages` parameter as recommended by the Azure best practices, and reload the corosync service.\n\n## References\nAZURE:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: 'corosync-cmapctl | grep \"runtime.config.totem.max_messages (u32) = \" | sed \"s/^.*= //\"'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected['1.1.3']\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "24ABCB",
    "name": "1.1.4",
    "group": "Corosync",
    "provider": "default",
    "description": "Corosync `join` is set to `60`\n",
    "remediation": "## Remediation\nAdjust the Corosync `join` parameter as recommended by the Azure best practices.\n\n## References\nAZURE:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  lineinfile:\n    path: /etc/corosync/corosync.conf\n    regexp: '^(\\s*){{ key_name }}:(\\s*)\\S*(\\s)*$'\n    line: '\\g\u003c1\u003e{{ key_name }}:\\g\u003c2\u003e{{ expected[name] }}\\g\u003c3\u003e'\n    backrefs: yes\n    #insertafter: 'totem {'\n  register: config_updated\n  when: ansible_check_mode\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "822E47",
    "name": "1.1.4.runtime",
    "group": "Corosync",
    "provider": "default",
    "description": "Corosync is running with `join` set to `60`\n",
    "remediation": "## Abstract\nThe runtime value of the Corosync `join` parameter is not set as recommended.\n\n## Remediation\nAdjust the corosync `join` parameter as recommended by the Azure best practices, and reload the corosync service.\n\n## References\nAZURE:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: 'corosync-cmapctl | grep \"runtime.config.totem.join (u32) = \" | sed \"s/^.*= //\"'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected['1.1.4']\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "21FCA6",
    "name": "1.1.5",
    "group": "Corosync",
    "provider": "default",
    "description": "Corosync `token_retransmits_before_loss_const` is set to: `10`\n",
    "remediation": "## Remediation\nAdjust the corosync `token_retransmits_before_loss_const` parameter to `10` as recommended by the Azure best practices.\n\n## References\nAZURE:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  lineinfile:\n    path: /etc/corosync/corosync.conf\n    regexp: '^(\\s*){{ key_name }}:(\\s*)\\S*(\\s)*$'\n    line: '\\g\u003c1\u003e{{ key_name }}:\\g\u003c2\u003e{{ expected[name] }}\\g\u003c3\u003e'\n    backrefs: yes\n    #insertafter: 'totem {'\n  register: config_updated\n  when: ansible_check_mode\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "15F7A8",
    "name": "1.1.5.runtime",
    "group": "Corosync",
    "provider": "default",
    "description": "Corosync is running with `token_retransmits_before_loss_const` set to `10`\n",
    "remediation": "## Abstract\nThe runtime value of the corosync `token_retransmits_before_loss_const` parameter is not set as recommended\n\n## Remediation\nAdjust the corosync `token_retransmits_before_loss_const` parameter as recommended on the Azure best practices, and reload the corosync service.\n\n## References\nAZURE:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: 'corosync-cmapctl | grep \"runtime.config.totem.token_retransmits_before_loss_const (u32) = \" | sed \"s/^.*= //\"'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected['1.1.5']\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "33403D",
    "name": "1.1.6",
    "group": "Corosync",
    "provider": "default",
    "description": "Corosync `transport` is set to `udpu`\n",
    "remediation": "## Remediation\nTo change the corosync MCAST transport to UCAST edit the /etc/corosync/corosync.conf\nas in the example\n```\n    max_messages: 20\n    interface {\n        ringnumber: 0\n-       bindnetaddr: 10.162.32.167\n-       mcastaddr: 239.11.100.41\n        mcastport: 5405\n        ttl: 1\n    }\n+   transport: udpu\n...\n+nodelist {\n+       node {\n+               ring0_addr: 10.162.32.167\n+               nodeid: 1\n+       }\n+\n+       node {\n+               ring0_addr: 10.162.32.89\n+               nodeid: 2\n+       }\n+\n+}\n```\n1. stop the already running cluster by using **systemctl stop pacemaker**\n2. In the totem section, in the interface subsection remove the\nkeys-value pairs **bindnetaddr** and **mcastaddr**\n3. In the totem section add key-value pair **transport: udpu**\n4. Add section nodelist and subsections node for each nodes of the\ncluster, where the **ring0_addr** is the IP address of the node\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles#create_the_corosync_configuration_files\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-adapting-the-corosync-and-sbd-configuration\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  lineinfile:\n    path: /etc/corosync/corosync.conf\n    regexp: '^(\\s*){{ key_name }}:(\\s*)\\S*(\\s)*$'\n    line: '\\g\u003c1\u003e{{ key_name }}:\\g\u003c2\u003e{{ expected[name] }}\\g\u003c3\u003e'\n    backrefs: yes\n    #insertafter: 'totem {'\n  register: config_updated\n  when: ansible_check_mode\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "7E0221",
    "name": "1.1.6.runtime",
    "group": "Corosync",
    "provider": "default",
    "description": "Corosync is running with `transport` set to `udpu`\n",
    "remediation": "## Remediation\nTo change the corosync MCAST transport to UCAST edit the /etc/corosync/corosync.conf\nas in the example\n```\n    max_messages: 20\n    interface {\n        ringnumber: 0\n-       bindnetaddr: 10.162.32.167\n-       mcastaddr: 239.11.100.41\n        mcastport: 5405\n        ttl: 1\n    }\n+   transport: udpu\n...\n+nodelist {\n+       node {\n+               ring0_addr: 10.162.32.167\n+               nodeid: 1\n+       }\n+\n+       node {\n+               ring0_addr: 10.162.32.89\n+               nodeid: 2\n+       }\n+\n+}\n```\n1. stop the already running cluster by using **systemctl stop pacemaker**\n2. In the totem section, in the interface subsection remove the\nkeys-value pairs **bindnetaddr** and **mcastaddr**\n3. In the totem section add key-value pair **transport: udpu**\n4. Add section nodelist and subsections node for each nodes of the\ncluster, where the **ring0_addr** is the IP address of the node\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles#create_the_corosync_configuration_files\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-adapting-the-corosync-and-sbd-configuration\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: 'corosync-cmapctl | grep \"totem.transport (str) = \" | sed \"s/.*= //\"'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected['1.1.6']\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "C620DC",
    "name": "1.1.7",
    "group": "Corosync",
    "provider": "default",
    "description": "Corosync `expected_votes` is set to `2`\n",
    "remediation": "## Remediation\nAdjust the corosync `expected_votes` parameter to `2` to make sure pacemaker calculates the actions properly for a two-node cluster.\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  lineinfile:\n    path: /etc/corosync/corosync.conf\n    regexp: '^(\\s*){{ key_name }}:(\\s*)\\S*(\\s)*$'\n    line: '\\g\u003c1\u003e{{ key_name }}:\\g\u003c2\u003e{{ expected[name] }}\\g\u003c3\u003e'\n    backrefs: yes\n    #insertafter: 'quorum {'\n  register: config_updated\n  when: ansible_check_mode\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "6E9B82",
    "name": "1.1.8",
    "group": "Corosync",
    "provider": "default",
    "description": "Corosync `two_node` is set to `1`\n",
    "remediation": "## Abstract\nThe runtime value of the corosync `two_node` parameter is not set as recommended.\n\n## Remediation\nAdjust the corosync two_node parameter to `1` to make sure Pacemaker calculates the actions properly for a two-node cluster.\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  lineinfile:\n    path: /etc/corosync/corosync.conf\n    regexp: '^(\\s*){{ key_name }}:(\\s*)\\S*(\\s)*$'\n    line: '\\g\u003c1\u003e{{ key_name }}:\\g\u003c2\u003e{{ expected[name] }}\\g\u003c3\u003e'\n    backrefs: yes\n    #insertafter: 'quorum {'\n  register: config_updated\n  when: ansible_check_mode\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "D78671",
    "name": "1.1.8.runtime",
    "group": "Corosync",
    "provider": "default",
    "description": "Corosync is running with `two_node` set to `1`\n",
    "remediation": "## Abstract\nThe runtime value of the corosync `two_node` parameter is not set as recommended.\n\n## Remediation\nAdjust the corosync `two_node` parameter to `1` to make sure Pacemaker calculates the actions properly for a two-node cluster,\nand reload the Corosync service.\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: 'corosync-cmapctl | grep \"runtime.votequorum.two_node (u8) = \" | sed \"s/^.*= //\"'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected['1.1.8']\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "DA114A",
    "name": "1.1.9",
    "group": "Corosync",
    "provider": "default",
    "description": "Corosync has at least 2 rings configured\n",
    "remediation": "## Abstract\nIt is strongly recommended to add a second ring to the corosync communication.\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n - section 9.1.3 in https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-adapting-the-corosync-and-sbd-configuration\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    RING_CHECK=$(\n        perl  -n -e '\n        my $cont;\n        while (\u003c\u003e) {\n            # filter out lines beginnig with hash sign (optionally after whitespace)\n            if (! /^\\W*#/ ) {\n                $cont .= $_;\n            }\n        }\n        my $node=0;\n        # search for all (sub)directives node { ... }\n        while ($cont =~ m/\\bnode\\W*{[^}]*}/gs) {\n            $node++;\n            my $nodeStr=$\u0026;\n            # filter for key value pairs for ring adresses for ring0 and ring1\n            if ($nodeStr =~ /(ring0_addr:\\W*(.*))\\W*(ring1_addr:\\W*(.*))?\\W*/g) {\n                if ( $2 ne \"\" and $4 ne \"\" ) {\n                    # report a \"2\", if both attributes are set with values\n                    print \"2\"\n                } elsif ( $2 ne \"\" or $4 ne \"\" ) {\n                    print \"1\"\n                } else {\n                    print \"0\"\n                }\n            }\n        }\n        printf \"\\n\"' \u003c /etc/corosync/corosync.conf\n    )\n    #echo \"RING_CHECK=$RING_CHECK\" \u003e /tmp/test119\n    [[ \"$RING_CHECK\" == \"{{ expected[name] }}\" ]] \u0026\u0026 exit 0\n    exit 1\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "32CFC6",
    "name": "1.1.9.runtime",
    "group": "Corosync",
    "provider": "default",
    "description": "Corosync is running with at least 2 rings\n",
    "remediation": "## Abstract\nIt is strongly recommended to add a second ring to the corosync communication.\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n - section 9.1.3 in https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-adapting-the-corosync-and-sbd-configuration\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    INTERFACE_COUNT=$(corosync-cmapctl | grep totem.interface\\\\..*\\.bindnetaddr | wc -l)\n    [[ ${INTERFACE_COUNT} -eq \"2\" ]] \u0026\u0026 exit 0\n    exit 1\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "205AF7",
    "name": "1.2.1",
    "group": "Pacemaker",
    "provider": "default",
    "description": "Fencing is enabled in the cluster attributes\n",
    "remediation": "## Abstract\nFencing is mandatory to guarantee data integrity for your SAP Applications.\nRunning a HA Cluster without fencing is not supported and might cause data loss.\n\n## Remediation\nExecute the following command to enable it:\n```\ncrm configure property stonith-enabled=true\n```\n\n## References\nAZURE:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#create-a-stonith-device-on-the-pacemaker-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-resources.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles#configure_the_general_cluster_properties\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-cluster-bootstrap-and-more\n  - https://documentation.suse.com/sle-ha/15-SP3/html/SLE-HA-all/cha-ha-fencing.html#sec-ha-fencing-recommend\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  command: 'crm_attribute -t crm_config -G -n stonith-enabled --quiet'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected[name]\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "373DB8",
    "name": "1.2.2",
    "group": "Pacemaker",
    "provider": "default",
    "description": "Cluster fencing timeout is configured correctly\n",
    "remediation": "## Abstract\nThe fencing timeout (`stonith-timeout`) determines the time Pacemaker will wait for fencing to succeed.\nThe recommended values on Azure are `144` seconds for SBD only or `900` seconds when using SBD combined with the Azure Fence agent.\n\n## Remediation\nExecute the following command to adjust the timeout for your usecase:\n```crm configure property stonith-timeout=144```\nor\n```crm configure property stonith-timeout=900```\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#create-a-stonith-device-on-the-pacemaker-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-resources.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles#configure_the_general_cluster_properties\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-cluster-bootstrap-and-more\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n   timeout=$(crm_attribute -t crm_config -G -n stonith-timeout --quiet | sed -e 's/s$//')\n   #\n   # for aws and gcp we might need additional expected vars (name + fence_aws_...)\n   #\n   if [[cibadmin -Q --xpath \"//primitive[@type='fence_azure_arm']/@type\" \u003e /dev/null 2\u003e\u00261 ]]; then\n     exit $([[ \"${timeout}\" -eq {{ expected[name + '.fence_azure_arm'] }} ]])\n   else\n     exit $([[ \"${timeout}\" -ge {{ expected[name + '.sbd'] }} ]])\n   fi\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "0B6DB2",
    "name": "1.3.1",
    "group": "SBD",
    "provider": "default",
    "description": "`SBD_PACEMAKER` value is correctly set in SBD configuration\n\nNot applicable for GCP, AWS\n",
    "remediation": "## Abstract\nFor proper SBD fencing, make sure that the integration with Pacemaker is enabled.\n**IMPORTANT**: Always verify these steps in a testing environment before doing so in production ones!\n\nThe SBD is not used in GCP or AWS environments.\n## Remediation\nRun the following commands in order:\n\n1. Put cluster into maintenance mode:\n   ```crm configure property maintenance-mode=true```\n2. Stop the cluster:\n   ```crm cluster stop```\n3. Set the SBD_PACEMAKER parameter to `yes` on `/etc/sysconfig/sbd`:\n   ```\n   [...]\n   SBD_PACEMAKER=\"yes\"\n   [...]\n   ```\n4. Restart the cluster:\n   ```crm cluster start```\n5. Put cluster out of maintenance mode\n   ```crm configure property maintenance-mode=false```\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#set-up-the-iscsi-target-server-sbd-device\n\nAWS:\n\n\nGCP:\n\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sle-ha/15-SP3/html/SLE-HA-all/cha-ha-storage-protect.html\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-1.11.5.5.4.4\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n      #!/bin/bash\n      [ '{{ expected[name] }}' == '@@skip@@' ] \u0026\u0026 exit 0\n      source /etc/sysconfig/sbd || exit 1\n      [ \"${SBD_PACEMAKER}\" == '{{ expected[name] }}' ] || exit 1\n      exit 0\n\n  register: config_updated\n  check_mode: false\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "49591F",
    "name": "1.3.2",
    "group": "SBD",
    "provider": "default",
    "description": "`SBD_STARTMODE` is set to `always`\n\nNot applicable for GCP, AWS\n",
    "remediation": "## Abstract\nIf not set to always, SBD will not automatically start if the node was previously fenced as it will expect the cluster in a clean state.\n**IMPORTANT**: Always verify these steps in a testing environment before doing so in production ones!\n\nThe SBD is not used in GCP or AWS environments.\n## Remediation\nRun the following commands in order:\n\n1. Put cluster into maintenance mode:\n   ```crm configure property maintenance-mode=true```\n2. Stop the cluster:\n   ```crm cluster stop```\n2. Set the SBD_STARTMODE parameter to `always` on `/etc/sysconfig/sbd`:\n   ```\n   [...]\n   SBD_STARTMODE=\"always\"\n   [...]\n   ```\n3. Restart the cluster:\n   ```crm cluster start```\n4. Put cluster out of maintenance mode:\n   ```crm configure property maintenance-mode=false```\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#set-up-the-iscsi-target-server-sbd-device\n\nAWS:\n\nGCP:\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-1.11.5.5.4.4\n  - https://documentation.suse.com/sle-ha/15-SP3/html/SLE-HA-all/cha-ha-storage-protect.html\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  check_mode: false\n  shell: |\n      #!/bin/bash\n      [ '{{ expected[name] }}' == '@@skip@@' ] \u0026\u0026 exit 0\n      source /etc/sysconfig/sbd || exit 1\n      [ \"${SBD_STARTMODE}\" == '{{ expected[name] }}' ] || exit 1\n      exit 0\n\n  register: config_updated\n  check_mode: false\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "816815",
    "name": "1.3.3",
    "group": "SBD",
    "provider": "default",
    "description": "SBD service is enabled\n\nNot applicable to GCP, AWS\n",
    "remediation": "## Abstract\nIf not enabled, SBD service will not start automatically after reboots, affecting the correct cluster startup.\n\nThe SBD is not used in GCP or AWS environments.\n## Remediation\nTo enable the service, run:\n```\nsystemctl enable sbd\n```\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#set-up-the-iscsi-target-server-sbd-device\n\nAWS:\n\nGCP:\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sle-ha/15-SP3/html/SLE-HA-all/cha-ha-storage-protect.html#pro-ha-storage-protect-sbd-services\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  systemd:\n    name: sbd\n    enabled: true\n  register: config_updated\n  when:\n    - ansible_check_mode\n    - expected[name]!=\"@@skip@@\"\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n    - expected[name]!=\"@@skip@@\"\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "61451E",
    "name": "1.3.4",
    "group": "SBD",
    "provider": "default",
    "description": "Multiple SBD devices are configured\n\nNot applicable to GCP, AWS\n",
    "remediation": "## Abstract\nIt is recommended to configure 3 SBD devices for production environments.\n\nThe SBD is not used in GCP or AWS environments.\n\n## References\nAzure:\n\n  -  https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#set-up-sbd-device\n\nAWS:\n\nGCP:\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#cha.hana-sr.scenario\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    #!/bin/bash\n    [ '{{ expected[name] }}' == '@@skip@@' ] \u0026\u0026 { echo '@@skip@@';  exit 0; }\n    file=\"/etc/sysconfig/sbd\"\n    source \"$file\" || exit 1\n    COUNT=$(perl -e '\n          my $sbd_device=\"'$SBD_DEVICE'\";\n          my $count;\n          my @paths=split(\";\", $sbd_device);\n          if ( $paths[-1] ne \"\" ) {\n              $count = $#paths + 1;\n          } else {\n              $count = $#paths;\n          }\n          printf \"%i\\n\",  $count\n        ')\n    [[ \"${COUNT}\" == {{ expected[name] }} ]] \u0026\u0026 exit 0\n    exit 1\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "B089BE",
    "name": "1.3.5",
    "group": "SBD",
    "provider": "default",
    "description": "SBD watchdog timeout is set to `15`\n\nNot applicable to GCP, AWS\n",
    "remediation": "## Remediation\nMake sure you configure your SBD Watchdog Timeout to `15` seconds as recommended on the best practices.\n\nThe SBD is not used in GCP or AWS environments.\n\n## References\nAzure:\n\n  -  https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#set-up-sbd-device\n\nAWS:\n\nGCP:\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-cluster-bootstrap-and-more\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    [ '{{ expected[name] }}' == '@@skip@@' ] \u0026\u0026 { echo '@@skip@@';  exit 0; }\n    DEF_WDTIMEOUT={{ expected[name] }}\n    result_wdtimeout=${DEF_WDTIMEOUT}\n\n    if [ -f /etc/sysconfig/sbd ]; then\n      source /etc/sysconfig/sbd\n    else\n      exit 1\n    fi\n\n    IFS=';' sbdarray=( $SBD_DEVICE )\n\n    for i in \"${sbdarray[@]}\"\n    do\n      device=\"${i//[[:space:]]/}\"\n      wdtimeout=$(/usr/sbin/sbd -d ${device} dump | grep -oP 'Timeout \\(watchdog\\)  *: \\K\\d+')|| echo \"\"\n      if [[ \"${wdtimeout}\" -ne \"${DEF_WDTIMEOUT}\" ]]; then\n        result_wdtimeout=\"${wdtimeout}\"\n      fi\n    done\n    echo \"${result_wdtimeout}\"\n\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected[name]\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "68626E",
    "name": "1.3.6",
    "group": "SBD",
    "provider": "default",
    "description": "SBD `msgwait` timeout value is two times the watchdog timeout\n\nNot applicable to GCP, AWS\n",
    "remediation": "## Remediation\nMake sure you configure your the SBD msgwait to 2 * (SBD Watchdog Timeout) as recommended on the best practices.\n\nThe SBD is not used in GCP or AWS environments.\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#set-up-sbd-device\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#set-up-the-iscsi-target-server-sbd-device\n\nAWS:\n\nGCP:\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-verifying-the-sbd-device\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    #!/bin/bash\n    [ '{{ expected[name] }}' == '@@skip@@' ] \u0026\u0026 { echo '@@skip@@';  exit 0; }\n    if [ -f /etc/sysconfig/sbd ]; then\n      source /etc/sysconfig/sbd\n    else\n      exit 1\n    fi\n\n    IFS=';' sbdarray=( $SBD_DEVICE )\n\n    for i in \"${sbdarray[@]}\"\n      do\n        device=\"${i//[[:space:]]/}\"\n        msgwait=$(/usr/sbin/sbd -d ${device} dump | grep -oP 'Timeout \\(msgwait\\)  *: \\K\\d+')|| echo \"\"\n        watchdog=$(/usr/sbin/sbd -d ${device} dump | grep -oP 'Timeout \\(watchdog\\)  *: \\K\\d+')|| echo \"\"\n        declare -i msgwait\n        declare -i watchdog\n        let watchdog*=2\n        if [ $msgwait -lt $watchdog ]; then\n          exit 1\n        fi\n      done\n    exit 0\n\n  register: config_updated\n  check_mode: false\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "790926",
    "name": "1.5.2",
    "group": "Miscellaneous",
    "provider": "default",
    "description": "The `hacluster` user password has been changed from the default value `linux`\n",
    "remediation": "## Abstract\nThe password of the `hacluster` user should be changed after setting up the cluster\n\n## Remediation\n```sudo passwd hacluster```\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/netweaver-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-initial-cluster-setup-using-ha-cluster-init\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    # if hacluster passwd is linux, fail\n    salt=$(sudo getent shadow hacluster | cut -d$ -f3)\n    epassword=$(sudo getent shadow hacluster | cut -d: -f2)\n    match=$(python3 -c 'import crypt; print(crypt.crypt(\"linux\", \"$6$'${salt}'\"))')\n    [[ ${match} == ${epassword} ]] \u0026\u0026 exit 1\n    exit 0\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "CAEFF1",
    "name": "2.2.1",
    "group": "OS and package versions",
    "provider": "default",
    "description": "Operative system vendor is supported\n",
    "remediation": "## Abstract\nSAPHanaSR is only supported on SUSE Linux Enterprise Server for SAP Applications.\n\n## Remediation\nPlease use SUSE Linux Enterprise Server for SAP Applications.\n\n## Reference\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/sap-hana-high-availability\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-ha-cluster-configuration-on-sles.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-os-support\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-planning-the-installation\n",
    "implementation": "---\n\n- block:\n    - name: \"{{ name }} Post results\"\n      import_role:\n        name: post-results\n  vars:\n    status: \"{{ ansible_distribution is version(expected[name], '==') }}\"",
    "labels": "hana"
  },
  {
    "id": "D028B9",
    "name": "2.2.2",
    "group": "OS and package versions",
    "provider": "default",
    "description": "Operative system version is supported\n",
    "remediation": "## Abstract\nYou need at least SUSE Linux Enterprise Server for SAP Applications 15 SP1 or newer\n\n## Remediation\nPlease install or upgrade to a supported OS version\n\n## Reference\n- https://documentation.suse.com/en-us/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/\n",
    "implementation": "---\n\n- block:\n    - name: \"{{ name }} Post results\"\n      import_role:\n        name: post-results\n  vars:\n    status: \"{{ ansible_distribution_version is version(expected[name], '\u003e=') }}\"",
    "labels": "hana"
  },
  {
    "id": "9FEFB0",
    "name": "2.2.3",
    "group": "OS and package versions",
    "provider": "default",
    "description": "Pacemaker version is supported\n",
    "remediation": "## Abstract\nInstalled Pacemaker version must be equal or higher than 2.0.1\n\n## Remediation\nInstall or upgrade to a supported Pacemaker version\n\n## Reference\n- https://documentation.suse.com/en-us/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/\n",
    "implementation": "---\n\n- block:\n    - name: \"{{ name }} Post results\"\n      import_role:\n        name: post-results\n  vars:\n    status: \"{{ 'pacemaker' in ansible_facts.packages and ansible_facts.packages['pacemaker'][0].version is version(expected[name], '\u003e=') }}\"",
    "labels": "hana"
  },
  {
    "id": "9FAAD0",
    "name": "2.2.3.exclude",
    "group": "OS and package versions",
    "provider": "default",
    "description": "Pacemaker version is not 2.0.3+20200511.2b248d828\n",
    "remediation": "## Abstract\nInstalled Pacemaker version must not be equal than 2.0.3+20200511.2b248d828\n\n## Remediation\nInstall or upgrade to a supported Pacemaker version\n\n## Reference\n- https://documentation.suse.com/en-us/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    # Check the pacemaker version IS NOT\n    # If not installed, exit with error\n    rpm -q --qf \"%{VERSION}\\n\" pacemaker || exit 2\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout is version(expected[name], '=')\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "hana"
  },
  {
    "id": "DC5429",
    "name": "2.2.4",
    "group": "OS and package versions",
    "provider": "default",
    "description": "Corosync version is supported\n",
    "remediation": "## Abstract\nInstalled Corosync version must be equal or higher than 2.4.5\n\n## Remediation\nInstall or upgrade to a supported Corosync version\n\n## Reference\n- https://documentation.suse.com/en-us/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/\n",
    "implementation": "---\n\n- block:\n    - name: \"{{ name }} Post results\"\n      import_role:\n        name: post-results\n  vars:\n    status: \"{{ 'corosync' in ansible_facts.packages and ansible_facts.packages['corosync'][0].version is version(expected[name], '\u003e=') }}\"",
    "labels": "hana"
  },
  {
    "id": "222A57",
    "name": "2.2.5",
    "group": "OS and package versions",
    "provider": "default",
    "description": "SBD version is supported\n",
    "remediation": "## Abstract\nInstalled SBD version must be equal or higher than 1.4.0\n\n## Remediation\nInstall or upgrade to a supported SBD version\n\n## Reference\n- https://documentation.suse.com/en-us/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/\n",
    "implementation": "---\n\n- block:\n    - name: \"{{ name }} Post results\"\n      import_role:\n        name: post-results\n  vars:\n    status: \"{{ 'sbd' in ansible_facts.packages and ansible_facts.packages['sbd'][0].version is version(expected[name], '\u003e=') }}\"",
    "labels": "hana"
  },
  {
    "id": "C3166E",
    "name": "2.2.5.exclude",
    "group": "OS and package versions",
    "provider": "default",
    "description": "SBD version is not 1.4.0+20190326.c38c5e6\n",
    "remediation": "## Abstract\nInstalled SBD version must not be equal than 1.4.0+20190326.c38c5e6\n\n## Remediation\nInstall or upgrade to a supported SBD version\n\n## Reference\n- https://documentation.suse.com/en-us/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    # Check the sbd version IS NOT\n    # If not installed, exit with error\n    rpm -q --qf \"%{VERSION}\\n\" sbd || exit 2\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout is version(expected[name], '=')\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "hana"
  },
  {
    "id": "F50AF5",
    "name": "2.2.7",
    "group": "OS and package versions",
    "provider": "default",
    "description": "Python3 version is supported\n",
    "remediation": "## Abstract\nInstalled Python3 version must be equal or higher than 3.6.5\n\n## Remediation\nInstall or upgrade to a supported Python3 version\n\n## Reference\n- https://documentation.suse.com/en-us/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/\n",
    "implementation": "---\n\n- block:\n    - name: \"{{ name }} Post results\"\n      import_role:\n        name: post-results\n  vars:\n    status: \"{{ 'python3' in ansible_facts.packages and ansible_facts.packages['python3'][0].version is version(expected[name], '\u003e=') }}\"",
    "labels": "hana"
  },
  {
    "id": "156F64",
    "name": "1.1.1",
    "group": "Corosync",
    "provider": "gcp",
    "description": "Corosync `token` timeout is set to `20000`\n",
    "remediation": "## Abstract\nThe value of the Corosync `token` timeout is not set as recommended.\n\n## Remediation\n\nAdjust the corosync `token` timeout as recommended on the best practices, and reload the corosync configuration\n\n1. Set the correct `token` timeout in the totem session in the corosync config file `/etc/corosync/corosync.conf`. This action must be repeated in all nodes of the cluster.\n   ```\n   [...]\n   totem { \n          token: \u003ctimeout value\u003e \n         }\n   [...]\n   ```   \n2. Reload the corosync configuration:\n   `crm corosync reload`\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nGCP: \n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles#create_the_corosync_configuration_files\n\nAWS:\n\n  -\thttps://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    #!/usr/bin/bash\n    # test fails, if corosync.conf file is even missing\n    [ -f /etc/corosync/corosync.conf ] || exit 1\n    TOKEN=$(\n        perl  -e '\n        while (\u003c\u003e) {\n            # filter out lines beginnig with hash sign (optionally after whitespace)\n            if (! /^\\s*#/ ) {\n                $cont .= $_;\n            }\n        }\n        # search for all directives totem { ... }\n        while ($cont =~ m/\\btotem\\s*{[^}]*}/gs) {\n            my $totemStr=$\u0026;\n            # filter for key value pairs for token\n            if ($totemStr =~ /token:\\s*(\\S*)\\s*/g) {         \n                print \"$1\";\n            }\n        }\n        printf \"\\n\"' \u003c /etc/corosync/corosync.conf\n    )\n    [[ \"$TOKEN\" == \"{{ expected[name] }}\" ]] \u0026\u0026 exit 0\n    exit 1\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "53D035",
    "name": "1.1.1.runtime",
    "group": "Corosync",
    "provider": "gcp",
    "description": "Corosync is running with `token` timeout set to `20000`\n",
    "remediation": "## Abstract\nThe runtime value of the Corosync `token` timeout is not set as recommended.\n\n## Remediation\n\nAdjust the corosync `token` timeout as recommended on the best practices, and reload the corosync configuration\n\n\n1. Set the correct `token` timeout in the totem session in the corosync config file `/etc/corosync/corosync.conf`. This action must be repeated in all nodes of the cluster.\n   ```\n   [...]\n   totem { \n          token: \u003ctimeout value\u003e \n         }\n   [...]\n   ```   \n2. Reload the corosync configuration:\n   `crm corosync reload`\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles#create_the_corosync_configuration_files\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: 'corosync-cmapctl | grep \"runtime.config.totem.token (u32) = \" | sed \"s/^.*= //\"'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected['1.1.1']\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "A1244C",
    "name": "1.1.2",
    "group": "Corosync",
    "provider": "gcp",
    "description": "Corosync `consensus` timeout is set to `24000`\n",
    "remediation": "## Remediation\nAdjust the Corosync `consensus` timeout as recommended by the Azure best practices.\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  lineinfile:\n    path: /etc/corosync/corosync.conf\n    regexp: '^(\\s*){{ key_name }}:(\\s*)\\S*(\\s)*$'\n    line: '\\g\u003c1\u003e{{ key_name }}:\\g\u003c2\u003e{{ expected[name] }}\\g\u003c3\u003e'\n    backrefs: yes\n    #insertafter: 'totem {'\n  register: config_updated\n  when: ansible_check_mode\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "FB0E0D",
    "name": "1.1.2.runtime",
    "group": "Corosync",
    "provider": "gcp",
    "description": "Corosync is running with `consensus` timeout set to `24000`\n",
    "remediation": "## Abstract\nThe runtime value of the Corosync `consensus` timeout is not set as recommended.\n\n## Remediation\nAdjust the corosync `consensus` timeout as recommended by the Azure best practices, and reload the corosync service.\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: 'corosync-cmapctl | grep \"runtime.config.totem.consensus (u32) = \" | sed \"s/^.*= //\"'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected['1.1.2']\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "845CC9",
    "name": "1.1.3",
    "group": "Corosync",
    "provider": "gcp",
    "description": "Corosync `max_messages` is set to `20`\n",
    "remediation": "## Remediation\nAdjust the Corosync `max_messages` parameter as recommended by the Azure best practices.\n\n## References\nAZURE:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  lineinfile:\n    path: /etc/corosync/corosync.conf\n    regexp: '^(\\s*){{ key_name }}:(\\s*)\\S*(\\s)*$'\n    line: '\\g\u003c1\u003e{{ key_name }}:\\g\u003c2\u003e{{ expected[name] }}\\g\u003c3\u003e'\n    backrefs: yes\n    #insertafter: 'totem {'\n  register: config_updated\n  when: ansible_check_mode\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "00081D",
    "name": "1.1.3.runtime",
    "group": "Corosync",
    "provider": "gcp",
    "description": "Corosync is running with `max_messages` set to `20`\n",
    "remediation": "## Abstract\nThe runtime value of the Corosync `max_messages` parameter is not set as recommended.\n\n## Remediation\nAdjust the corosync `max_messages` parameter as recommended by the Azure best practices, and reload the corosync service.\n\n## References\nAZURE:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: 'corosync-cmapctl | grep \"runtime.config.totem.max_messages (u32) = \" | sed \"s/^.*= //\"'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected['1.1.3']\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "24ABCB",
    "name": "1.1.4",
    "group": "Corosync",
    "provider": "gcp",
    "description": "Corosync `join` is set to `60`\n",
    "remediation": "## Remediation\nAdjust the Corosync `join` parameter as recommended by the Azure best practices.\n\n## References\nAZURE:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  lineinfile:\n    path: /etc/corosync/corosync.conf\n    regexp: '^(\\s*){{ key_name }}:(\\s*)\\S*(\\s)*$'\n    line: '\\g\u003c1\u003e{{ key_name }}:\\g\u003c2\u003e{{ expected[name] }}\\g\u003c3\u003e'\n    backrefs: yes\n    #insertafter: 'totem {'\n  register: config_updated\n  when: ansible_check_mode\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "822E47",
    "name": "1.1.4.runtime",
    "group": "Corosync",
    "provider": "gcp",
    "description": "Corosync is running with `join` set to `60`\n",
    "remediation": "## Abstract\nThe runtime value of the Corosync `join` parameter is not set as recommended.\n\n## Remediation\nAdjust the corosync `join` parameter as recommended by the Azure best practices, and reload the corosync service.\n\n## References\nAZURE:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: 'corosync-cmapctl | grep \"runtime.config.totem.join (u32) = \" | sed \"s/^.*= //\"'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected['1.1.4']\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "21FCA6",
    "name": "1.1.5",
    "group": "Corosync",
    "provider": "gcp",
    "description": "Corosync `token_retransmits_before_loss_const` is set to: `10`\n",
    "remediation": "## Remediation\nAdjust the corosync `token_retransmits_before_loss_const` parameter to `10` as recommended by the Azure best practices.\n\n## References\nAZURE:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  lineinfile:\n    path: /etc/corosync/corosync.conf\n    regexp: '^(\\s*){{ key_name }}:(\\s*)\\S*(\\s)*$'\n    line: '\\g\u003c1\u003e{{ key_name }}:\\g\u003c2\u003e{{ expected[name] }}\\g\u003c3\u003e'\n    backrefs: yes\n    #insertafter: 'totem {'\n  register: config_updated\n  when: ansible_check_mode\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "15F7A8",
    "name": "1.1.5.runtime",
    "group": "Corosync",
    "provider": "gcp",
    "description": "Corosync is running with `token_retransmits_before_loss_const` set to `10`\n",
    "remediation": "## Abstract\nThe runtime value of the corosync `token_retransmits_before_loss_const` parameter is not set as recommended\n\n## Remediation\nAdjust the corosync `token_retransmits_before_loss_const` parameter as recommended on the Azure best practices, and reload the corosync service.\n\n## References\nAZURE:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: 'corosync-cmapctl | grep \"runtime.config.totem.token_retransmits_before_loss_const (u32) = \" | sed \"s/^.*= //\"'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected['1.1.5']\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "33403D",
    "name": "1.1.6",
    "group": "Corosync",
    "provider": "gcp",
    "description": "Corosync `transport` is set to `udpu`\n",
    "remediation": "## Remediation\nTo change the corosync MCAST transport to UCAST edit the /etc/corosync/corosync.conf\nas in the example\n```\n    max_messages: 20\n    interface {\n        ringnumber: 0\n-       bindnetaddr: 10.162.32.167\n-       mcastaddr: 239.11.100.41\n        mcastport: 5405\n        ttl: 1\n    }\n+   transport: udpu\n...\n+nodelist {\n+       node {\n+               ring0_addr: 10.162.32.167\n+               nodeid: 1\n+       }\n+\n+       node {\n+               ring0_addr: 10.162.32.89\n+               nodeid: 2\n+       }\n+\n+}\n```\n1. stop the already running cluster by using **systemctl stop pacemaker**\n2. In the totem section, in the interface subsection remove the\nkeys-value pairs **bindnetaddr** and **mcastaddr**\n3. In the totem section add key-value pair **transport: udpu**\n4. Add section nodelist and subsections node for each nodes of the\ncluster, where the **ring0_addr** is the IP address of the node\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles#create_the_corosync_configuration_files\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-adapting-the-corosync-and-sbd-configuration\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  lineinfile:\n    path: /etc/corosync/corosync.conf\n    regexp: '^(\\s*){{ key_name }}:(\\s*)\\S*(\\s)*$'\n    line: '\\g\u003c1\u003e{{ key_name }}:\\g\u003c2\u003e{{ expected[name] }}\\g\u003c3\u003e'\n    backrefs: yes\n    #insertafter: 'totem {'\n  register: config_updated\n  when: ansible_check_mode\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "7E0221",
    "name": "1.1.6.runtime",
    "group": "Corosync",
    "provider": "gcp",
    "description": "Corosync is running with `transport` set to `udpu`\n",
    "remediation": "## Remediation\nTo change the corosync MCAST transport to UCAST edit the /etc/corosync/corosync.conf\nas in the example\n```\n    max_messages: 20\n    interface {\n        ringnumber: 0\n-       bindnetaddr: 10.162.32.167\n-       mcastaddr: 239.11.100.41\n        mcastport: 5405\n        ttl: 1\n    }\n+   transport: udpu\n...\n+nodelist {\n+       node {\n+               ring0_addr: 10.162.32.167\n+               nodeid: 1\n+       }\n+\n+       node {\n+               ring0_addr: 10.162.32.89\n+               nodeid: 2\n+       }\n+\n+}\n```\n1. stop the already running cluster by using **systemctl stop pacemaker**\n2. In the totem section, in the interface subsection remove the\nkeys-value pairs **bindnetaddr** and **mcastaddr**\n3. In the totem section add key-value pair **transport: udpu**\n4. Add section nodelist and subsections node for each nodes of the\ncluster, where the **ring0_addr** is the IP address of the node\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles#create_the_corosync_configuration_files\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-adapting-the-corosync-and-sbd-configuration\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: 'corosync-cmapctl | grep \"totem.transport (str) = \" | sed \"s/.*= //\"'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected['1.1.6']\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "C620DC",
    "name": "1.1.7",
    "group": "Corosync",
    "provider": "gcp",
    "description": "Corosync `expected_votes` is set to `2`\n",
    "remediation": "## Remediation\nAdjust the corosync `expected_votes` parameter to `2` to make sure pacemaker calculates the actions properly for a two-node cluster.\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  lineinfile:\n    path: /etc/corosync/corosync.conf\n    regexp: '^(\\s*){{ key_name }}:(\\s*)\\S*(\\s)*$'\n    line: '\\g\u003c1\u003e{{ key_name }}:\\g\u003c2\u003e{{ expected[name] }}\\g\u003c3\u003e'\n    backrefs: yes\n    #insertafter: 'quorum {'\n  register: config_updated\n  when: ansible_check_mode\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "6E9B82",
    "name": "1.1.8",
    "group": "Corosync",
    "provider": "gcp",
    "description": "Corosync `two_node` is set to `1`\n",
    "remediation": "## Abstract\nThe runtime value of the corosync `two_node` parameter is not set as recommended.\n\n## Remediation\nAdjust the corosync two_node parameter to `1` to make sure Pacemaker calculates the actions properly for a two-node cluster.\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  lineinfile:\n    path: /etc/corosync/corosync.conf\n    regexp: '^(\\s*){{ key_name }}:(\\s*)\\S*(\\s)*$'\n    line: '\\g\u003c1\u003e{{ key_name }}:\\g\u003c2\u003e{{ expected[name] }}\\g\u003c3\u003e'\n    backrefs: yes\n    #insertafter: 'quorum {'\n  register: config_updated\n  when: ansible_check_mode\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "D78671",
    "name": "1.1.8.runtime",
    "group": "Corosync",
    "provider": "gcp",
    "description": "Corosync is running with `two_node` set to `1`\n",
    "remediation": "## Abstract\nThe runtime value of the corosync `two_node` parameter is not set as recommended.\n\n## Remediation\nAdjust the corosync `two_node` parameter to `1` to make sure Pacemaker calculates the actions properly for a two-node cluster,\nand reload the Corosync service.\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: 'corosync-cmapctl | grep \"runtime.votequorum.two_node (u8) = \" | sed \"s/^.*= //\"'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected['1.1.8']\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "DA114A",
    "name": "1.1.9",
    "group": "Corosync",
    "provider": "gcp",
    "description": "Corosync has at least 2 rings configured\n",
    "remediation": "## Abstract\nIt is strongly recommended to add a second ring to the corosync communication.\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n - section 9.1.3 in https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-adapting-the-corosync-and-sbd-configuration\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    RING_CHECK=$(\n        perl  -n -e '\n        my $cont;\n        while (\u003c\u003e) {\n            # filter out lines beginnig with hash sign (optionally after whitespace)\n            if (! /^\\W*#/ ) {\n                $cont .= $_;\n            }\n        }\n        my $node=0;\n        # search for all (sub)directives node { ... }\n        while ($cont =~ m/\\bnode\\W*{[^}]*}/gs) {\n            $node++;\n            my $nodeStr=$\u0026;\n            # filter for key value pairs for ring adresses for ring0 and ring1\n            if ($nodeStr =~ /(ring0_addr:\\W*(.*))\\W*(ring1_addr:\\W*(.*))?\\W*/g) {\n                if ( $2 ne \"\" and $4 ne \"\" ) {\n                    # report a \"2\", if both attributes are set with values\n                    print \"2\"\n                } elsif ( $2 ne \"\" or $4 ne \"\" ) {\n                    print \"1\"\n                } else {\n                    print \"0\"\n                }\n            }\n        }\n        printf \"\\n\"' \u003c /etc/corosync/corosync.conf\n    )\n    #echo \"RING_CHECK=$RING_CHECK\" \u003e /tmp/test119\n    [[ \"$RING_CHECK\" == \"{{ expected[name] }}\" ]] \u0026\u0026 exit 0\n    exit 1\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "32CFC6",
    "name": "1.1.9.runtime",
    "group": "Corosync",
    "provider": "gcp",
    "description": "Corosync is running with at least 2 rings\n",
    "remediation": "## Abstract\nIt is strongly recommended to add a second ring to the corosync communication.\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles\n\nSUSE / KVM:\n\n - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-example-for-etccorosynccorosync-conf\n - section 9.1.3 in https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-adapting-the-corosync-and-sbd-configuration\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    INTERFACE_COUNT=$(corosync-cmapctl | grep totem.interface\\\\..*\\.bindnetaddr | wc -l)\n    [[ ${INTERFACE_COUNT} -eq \"2\" ]] \u0026\u0026 exit 0\n    exit 1\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "205AF7",
    "name": "1.2.1",
    "group": "Pacemaker",
    "provider": "gcp",
    "description": "Fencing is enabled in the cluster attributes\n",
    "remediation": "## Abstract\nFencing is mandatory to guarantee data integrity for your SAP Applications.\nRunning a HA Cluster without fencing is not supported and might cause data loss.\n\n## Remediation\nExecute the following command to enable it:\n```\ncrm configure property stonith-enabled=true\n```\n\n## References\nAZURE:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#create-a-stonith-device-on-the-pacemaker-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-resources.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles#configure_the_general_cluster_properties\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-cluster-bootstrap-and-more\n  - https://documentation.suse.com/sle-ha/15-SP3/html/SLE-HA-all/cha-ha-fencing.html#sec-ha-fencing-recommend\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  command: 'crm_attribute -t crm_config -G -n stonith-enabled --quiet'\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected[name]\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "373DB8",
    "name": "1.2.2",
    "group": "Pacemaker",
    "provider": "gcp",
    "description": "Cluster fencing timeout is configured correctly\n",
    "remediation": "## Abstract\nThe fencing timeout (`stonith-timeout`) determines the time Pacemaker will wait for fencing to succeed.\nThe recommended values on Azure are `144` seconds for SBD only or `900` seconds when using SBD combined with the Azure Fence agent.\n\n## Remediation\nExecute the following command to adjust the timeout for your usecase:\n```crm configure property stonith-timeout=144```\nor\n```crm configure property stonith-timeout=900```\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#create-a-stonith-device-on-the-pacemaker-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-resources.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles#configure_the_general_cluster_properties\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-cluster-bootstrap-and-more\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n   timeout=$(crm_attribute -t crm_config -G -n stonith-timeout --quiet | sed -e 's/s$//')\n   #\n   # for aws and gcp we might need additional expected vars (name + fence_aws_...)\n   #\n   if [[cibadmin -Q --xpath \"//primitive[@type='fence_azure_arm']/@type\" \u003e /dev/null 2\u003e\u00261 ]]; then\n     exit $([[ \"${timeout}\" -eq {{ expected[name + '.fence_azure_arm'] }} ]])\n   else\n     exit $([[ \"${timeout}\" -ge {{ expected[name + '.sbd'] }} ]])\n   fi\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "0B6DB2",
    "name": "1.3.1",
    "group": "SBD",
    "provider": "gcp",
    "description": "`SBD_PACEMAKER` value is correctly set in SBD configuration\n\nNot applicable for GCP, AWS\n",
    "remediation": "## Abstract\nFor proper SBD fencing, make sure that the integration with Pacemaker is enabled.\n**IMPORTANT**: Always verify these steps in a testing environment before doing so in production ones!\n\nThe SBD is not used in GCP or AWS environments.\n## Remediation\nRun the following commands in order:\n\n1. Put cluster into maintenance mode:\n   ```crm configure property maintenance-mode=true```\n2. Stop the cluster:\n   ```crm cluster stop```\n3. Set the SBD_PACEMAKER parameter to `yes` on `/etc/sysconfig/sbd`:\n   ```\n   [...]\n   SBD_PACEMAKER=\"yes\"\n   [...]\n   ```\n4. Restart the cluster:\n   ```crm cluster start```\n5. Put cluster out of maintenance mode\n   ```crm configure property maintenance-mode=false```\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#set-up-the-iscsi-target-server-sbd-device\n\nAWS:\n\n\nGCP:\n\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sle-ha/15-SP3/html/SLE-HA-all/cha-ha-storage-protect.html\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-1.11.5.5.4.4\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n      #!/bin/bash\n      [ '{{ expected[name] }}' == '@@skip@@' ] \u0026\u0026 exit 0\n      source /etc/sysconfig/sbd || exit 1\n      [ \"${SBD_PACEMAKER}\" == '{{ expected[name] }}' ] || exit 1\n      exit 0\n\n  register: config_updated\n  check_mode: false\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "49591F",
    "name": "1.3.2",
    "group": "SBD",
    "provider": "gcp",
    "description": "`SBD_STARTMODE` is set to `always`\n\nNot applicable for GCP, AWS\n",
    "remediation": "## Abstract\nIf not set to always, SBD will not automatically start if the node was previously fenced as it will expect the cluster in a clean state.\n**IMPORTANT**: Always verify these steps in a testing environment before doing so in production ones!\n\nThe SBD is not used in GCP or AWS environments.\n## Remediation\nRun the following commands in order:\n\n1. Put cluster into maintenance mode:\n   ```crm configure property maintenance-mode=true```\n2. Stop the cluster:\n   ```crm cluster stop```\n2. Set the SBD_STARTMODE parameter to `always` on `/etc/sysconfig/sbd`:\n   ```\n   [...]\n   SBD_STARTMODE=\"always\"\n   [...]\n   ```\n3. Restart the cluster:\n   ```crm cluster start```\n4. Put cluster out of maintenance mode:\n   ```crm configure property maintenance-mode=false```\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#set-up-the-iscsi-target-server-sbd-device\n\nAWS:\n\nGCP:\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-1.11.5.5.4.4\n  - https://documentation.suse.com/sle-ha/15-SP3/html/SLE-HA-all/cha-ha-storage-protect.html\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  check_mode: false\n  shell: |\n      #!/bin/bash\n      [ '{{ expected[name] }}' == '@@skip@@' ] \u0026\u0026 exit 0\n      source /etc/sysconfig/sbd || exit 1\n      [ \"${SBD_STARTMODE}\" == '{{ expected[name] }}' ] || exit 1\n      exit 0\n\n  register: config_updated\n  check_mode: false\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "816815",
    "name": "1.3.3",
    "group": "SBD",
    "provider": "gcp",
    "description": "SBD service is enabled\n\nNot applicable to GCP, AWS\n",
    "remediation": "## Abstract\nIf not enabled, SBD service will not start automatically after reboots, affecting the correct cluster startup.\n\nThe SBD is not used in GCP or AWS environments.\n## Remediation\nTo enable the service, run:\n```\nsystemctl enable sbd\n```\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#set-up-the-iscsi-target-server-sbd-device\n\nAWS:\n\nGCP:\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sle-ha/15-SP3/html/SLE-HA-all/cha-ha-storage-protect.html#pro-ha-storage-protect-sbd-services\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  systemd:\n    name: sbd\n    enabled: true\n  register: config_updated\n  when:\n    - ansible_check_mode\n    - expected[name]!=\"@@skip@@\"\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n    - expected[name]!=\"@@skip@@\"\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "61451E",
    "name": "1.3.4",
    "group": "SBD",
    "provider": "gcp",
    "description": "Multiple SBD devices are configured\n\nNot applicable to GCP, AWS\n",
    "remediation": "## Abstract\nIt is recommended to configure 3 SBD devices for production environments.\n\nThe SBD is not used in GCP or AWS environments.\n\n## References\nAzure:\n\n  -  https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#set-up-sbd-device\n\nAWS:\n\nGCP:\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#cha.hana-sr.scenario\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    #!/bin/bash\n    [ '{{ expected[name] }}' == '@@skip@@' ] \u0026\u0026 { echo '@@skip@@';  exit 0; }\n    file=\"/etc/sysconfig/sbd\"\n    source \"$file\" || exit 1\n    COUNT=$(perl -e '\n          my $sbd_device=\"'$SBD_DEVICE'\";\n          my $count;\n          my @paths=split(\";\", $sbd_device);\n          if ( $paths[-1] ne \"\" ) {\n              $count = $#paths + 1;\n          } else {\n              $count = $#paths;\n          }\n          printf \"%i\\n\",  $count\n        ')\n    [[ \"${COUNT}\" == {{ expected[name] }} ]] \u0026\u0026 exit 0\n    exit 1\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "B089BE",
    "name": "1.3.5",
    "group": "SBD",
    "provider": "gcp",
    "description": "SBD watchdog timeout is set to `@@skip@@`\n\nNot applicable to GCP, AWS\n",
    "remediation": "## Remediation\nMake sure you configure your SBD Watchdog Timeout to `@@skip@@` seconds as recommended on the best practices.\n\nThe SBD is not used in GCP or AWS environments.\n\n## References\nAzure:\n\n  -  https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#set-up-sbd-device\n\nAWS:\n\nGCP:\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-cluster-bootstrap-and-more\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    [ '{{ expected[name] }}' == '@@skip@@' ] \u0026\u0026 { echo '@@skip@@';  exit 0; }\n    DEF_WDTIMEOUT={{ expected[name] }}\n    result_wdtimeout=${DEF_WDTIMEOUT}\n\n    if [ -f /etc/sysconfig/sbd ]; then\n      source /etc/sysconfig/sbd\n    else\n      exit 1\n    fi\n\n    IFS=';' sbdarray=( $SBD_DEVICE )\n\n    for i in \"${sbdarray[@]}\"\n    do\n      device=\"${i//[[:space:]]/}\"\n      wdtimeout=$(/usr/sbin/sbd -d ${device} dump | grep -oP 'Timeout \\(watchdog\\)  *: \\K\\d+')|| echo \"\"\n      if [[ \"${wdtimeout}\" -ne \"${DEF_WDTIMEOUT}\" ]]; then\n        result_wdtimeout=\"${wdtimeout}\"\n      fi\n    done\n    echo \"${result_wdtimeout}\"\n\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout != expected[name]\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "68626E",
    "name": "1.3.6",
    "group": "SBD",
    "provider": "gcp",
    "description": "SBD `msgwait` timeout value is two times the watchdog timeout\n\nNot applicable to GCP, AWS\n",
    "remediation": "## Remediation\nMake sure you configure your the SBD msgwait to 2 * (SBD Watchdog Timeout) as recommended on the best practices.\n\nThe SBD is not used in GCP or AWS environments.\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#set-up-sbd-device\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#set-up-the-iscsi-target-server-sbd-device\n\nAWS:\n\nGCP:\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-verifying-the-sbd-device\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    #!/bin/bash\n    [ '{{ expected[name] }}' == '@@skip@@' ] \u0026\u0026 { echo '@@skip@@';  exit 0; }\n    if [ -f /etc/sysconfig/sbd ]; then\n      source /etc/sysconfig/sbd\n    else\n      exit 1\n    fi\n\n    IFS=';' sbdarray=( $SBD_DEVICE )\n\n    for i in \"${sbdarray[@]}\"\n      do\n        device=\"${i//[[:space:]]/}\"\n        msgwait=$(/usr/sbin/sbd -d ${device} dump | grep -oP 'Timeout \\(msgwait\\)  *: \\K\\d+')|| echo \"\"\n        watchdog=$(/usr/sbin/sbd -d ${device} dump | grep -oP 'Timeout \\(watchdog\\)  *: \\K\\d+')|| echo \"\"\n        declare -i msgwait\n        declare -i watchdog\n        let watchdog*=2\n        if [ $msgwait -lt $watchdog ]; then\n          exit 1\n        fi\n      done\n    exit 0\n\n  register: config_updated\n  check_mode: false\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "790926",
    "name": "1.5.2",
    "group": "Miscellaneous",
    "provider": "gcp",
    "description": "The `hacluster` user password has been changed from the default value `linux`\n",
    "remediation": "## Abstract\nThe password of the `hacluster` user should be changed after setting up the cluster\n\n## Remediation\n```sudo passwd hacluster```\n\n## References\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-suse-pacemaker#install-the-cluster\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-cluster-configuration.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/netweaver-ha-config-sles\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-initial-cluster-setup-using-ha-cluster-init\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    # if hacluster passwd is linux, fail\n    salt=$(sudo getent shadow hacluster | cut -d$ -f3)\n    epassword=$(sudo getent shadow hacluster | cut -d: -f2)\n    match=$(python3 -c 'import crypt; print(crypt.crypt(\"linux\", \"$6$'${salt}'\"))')\n    [[ ${match} == ${epassword} ]] \u0026\u0026 exit 1\n    exit 0\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.rc != 0\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "generic"
  },
  {
    "id": "CAEFF1",
    "name": "2.2.1",
    "group": "OS and package versions",
    "provider": "gcp",
    "description": "Operative system vendor is supported\n",
    "remediation": "## Abstract\nSAPHanaSR is only supported on SUSE Linux Enterprise Server for SAP Applications.\n\n## Remediation\nPlease use SUSE Linux Enterprise Server for SAP Applications.\n\n## Reference\nAzure:\n\n  - https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/sap-hana-high-availability\n\nAWS:\n\n  - https://docs.aws.amazon.com/sap/latest/sap-hana/sap-hana-on-aws-ha-cluster-configuration-on-sles.html\n\nGCP:\n\n  - https://cloud.google.com/solutions/sap/docs/sap-hana-os-support\n\nSUSE / KVM:\n\n  - https://documentation.suse.com/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/#id-planning-the-installation\n",
    "implementation": "---\n\n- block:\n    - name: \"{{ name }} Post results\"\n      import_role:\n        name: post-results\n  vars:\n    status: \"{{ ansible_distribution is version(expected[name], '==') }}\"",
    "labels": "hana"
  },
  {
    "id": "D028B9",
    "name": "2.2.2",
    "group": "OS and package versions",
    "provider": "gcp",
    "description": "Operative system version is supported\n",
    "remediation": "## Abstract\nYou need at least SUSE Linux Enterprise Server for SAP Applications 15 SP1 or newer\n\n## Remediation\nPlease install or upgrade to a supported OS version\n\n## Reference\n- https://documentation.suse.com/en-us/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/\n",
    "implementation": "---\n\n- block:\n    - name: \"{{ name }} Post results\"\n      import_role:\n        name: post-results\n  vars:\n    status: \"{{ ansible_distribution_version is version(expected[name], '\u003e=') }}\"",
    "labels": "hana"
  },
  {
    "id": "9FEFB0",
    "name": "2.2.3",
    "group": "OS and package versions",
    "provider": "gcp",
    "description": "Pacemaker version is supported\n",
    "remediation": "## Abstract\nInstalled Pacemaker version must be equal or higher than 2.0.1\n\n## Remediation\nInstall or upgrade to a supported Pacemaker version\n\n## Reference\n- https://documentation.suse.com/en-us/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/\n",
    "implementation": "---\n\n- block:\n    - name: \"{{ name }} Post results\"\n      import_role:\n        name: post-results\n  vars:\n    status: \"{{ 'pacemaker' in ansible_facts.packages and ansible_facts.packages['pacemaker'][0].version is version(expected[name], '\u003e=') }}\"",
    "labels": "hana"
  },
  {
    "id": "9FAAD0",
    "name": "2.2.3.exclude",
    "group": "OS and package versions",
    "provider": "gcp",
    "description": "Pacemaker version is not 2.0.3+20200511.2b248d828\n",
    "remediation": "## Abstract\nInstalled Pacemaker version must not be equal than 2.0.3+20200511.2b248d828\n\n## Remediation\nInstall or upgrade to a supported Pacemaker version\n\n## Reference\n- https://documentation.suse.com/en-us/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    # Check the pacemaker version IS NOT\n    # If not installed, exit with error\n    rpm -q --qf \"%{VERSION}\\n\" pacemaker || exit 2\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout is version(expected[name], '=')\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "hana"
  },
  {
    "id": "DC5429",
    "name": "2.2.4",
    "group": "OS and package versions",
    "provider": "gcp",
    "description": "Corosync version is supported\n",
    "remediation": "## Abstract\nInstalled Corosync version must be equal or higher than 2.4.5\n\n## Remediation\nInstall or upgrade to a supported Corosync version\n\n## Reference\n- https://documentation.suse.com/en-us/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/\n",
    "implementation": "---\n\n- block:\n    - name: \"{{ name }} Post results\"\n      import_role:\n        name: post-results\n  vars:\n    status: \"{{ 'corosync' in ansible_facts.packages and ansible_facts.packages['corosync'][0].version is version(expected[name], '\u003e=') }}\"",
    "labels": "hana"
  },
  {
    "id": "222A57",
    "name": "2.2.5",
    "group": "OS and package versions",
    "provider": "gcp",
    "description": "SBD version is supported\n",
    "remediation": "## Abstract\nInstalled SBD version must be equal or higher than 1.4.0\n\n## Remediation\nInstall or upgrade to a supported SBD version\n\n## Reference\n- https://documentation.suse.com/en-us/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/\n",
    "implementation": "---\n\n- block:\n    - name: \"{{ name }} Post results\"\n      import_role:\n        name: post-results\n  vars:\n    status: \"{{ 'sbd' in ansible_facts.packages and ansible_facts.packages['sbd'][0].version is version(expected[name], '\u003e=') }}\"",
    "labels": "hana"
  },
  {
    "id": "C3166E",
    "name": "2.2.5.exclude",
    "group": "OS and package versions",
    "provider": "gcp",
    "description": "SBD version is not 1.4.0+20190326.c38c5e6\n",
    "remediation": "## Abstract\nInstalled SBD version must not be equal than 1.4.0+20190326.c38c5e6\n\n## Remediation\nInstall or upgrade to a supported SBD version\n\n## Reference\n- https://documentation.suse.com/en-us/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/\n",
    "implementation": "---\n\n- name: \"{{ name }}.check\"\n  shell: |\n    # Check the sbd version IS NOT\n    # If not installed, exit with error\n    rpm -q --qf \"%{VERSION}\\n\" sbd || exit 2\n  check_mode: false\n  register: config_updated\n  changed_when: config_updated.stdout is version(expected[name], '=')\n  failed_when: config_updated.rc \u003e 1\n\n- block:\n    - name: Post results\n      import_role:\n        name: post-results\n  when:\n    - ansible_check_mode\n  vars:\n    status: \"{{ config_updated is not changed }}\"",
    "labels": "hana"
  },
  {
    "id": "F50AF5",
    "name": "2.2.7",
    "group": "OS and package versions",
    "provider": "gcp",
    "description": "Python3 version is supported\n",
    "remediation": "## Abstract\nInstalled Python3 version must be equal or higher than 3.6.5\n\n## Remediation\nInstall or upgrade to a supported Python3 version\n\n## Reference\n- https://documentation.suse.com/en-us/sbp/all/single-html/SLES4SAP-hana-sr-guide-PerfOpt-15/\n",
    "implementation": "---\n\n- block:\n    - name: \"{{ name }} Post results\"\n      import_role:\n        name: post-results\n  vars:\n    status: \"{{ 'python3' in ansible_facts.packages and ansible_facts.packages['python3'][0].version is version(expected[name], '\u003e=') }}\"",
    "labels": "hana"
  }
]
