............................................................................................................................................................

  1) test should render single host information (TrentoWeb.V1.HostJSONTest)
     test/trento_web/views/v1/host_view_json_test.exs:19
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1185ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/views/v1/host_view_json_test.exs:1: TrentoWeb.V1.HostJSONTest.__ex_unit__/2

     The following output was logged:
     09:32:08.009 [error] Could not refresh the access token: [message: "Invalid token", claim: "aud", claim_val: "trento_audnew"]
     


  2) test should return the expected overview (TrentoWeb.V1.HealthOverviewControllerTest)
     test/trento_web/controllers/v1/health_overview_controller_test.exs:18
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1986ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/controllers/v1/health_overview_controller_test.exs:1: TrentoWeb.V1.HealthOverviewControllerTest.__ex_unit__/2

     The following output was logged:
     09:32:08.009 [error] Could not refresh the access token: [message: "Invalid token", claim: "aud", claim_val: "trento_audnew"]
     


  3) test enriching operation activities should enrich operation completed events in hosts (Trento.ActivityLog.MetadataEnricherTest)
     test/trento/activity_logging/metadata_enricher_test.exs:222
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 832ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/data_case.ex:33: Trento.DataCase.__ex_unit_setup_0/1
       (trento 2.4.0) test/support/data_case.ex:1: Trento.DataCase.__ex_unit__/2
       test/trento/activity_logging/metadata_enricher_test.exs:1: Trento.ActivityLog.MetadataEnricherTest.__ex_unit__/2

     The following output was logged:
     09:32:08.009 [error] Could not refresh the access token: [message: "Invalid token", claim: "aud", claim_val: "trento_audnew"]
     


  4) test should return the expected targets (TrentoWeb.V1.PrometheusControllerTest)
     test/trento_web/controllers/v1/prometheus_controller_test.exs:10
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 490ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/controllers/v1/prometheus_controller_test.exs:1: TrentoWeb.V1.PrometheusControllerTest.__ex_unit__/2



  5) test should return not found if the given resource is not found (TrentoWeb.Plugs.OperationsPolicyPlugTest)
     test/trento_web/plugs/operations_policy_plug_test.exs:21
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1903ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/plugs/operations_policy_plug_test.exs:1: TrentoWeb.Plugs.OperationsPolicyPlugTest.__ex_unit__/2

     The following output was logged:
     09:32:08.009 [error] Could not refresh the access token: [message: "Invalid token", claim: "aud", claim_val: "trento_audnew"]
     


  6) test fetch/2 should not fetch the user when the jwt signature is valid but the audience is not valid (TrentoWeb.Plugs.AppJWTAuthPlugTest)
     test/trento_web/plugs/app_jwt_auth_plug_test.exs:218
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 659ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/plugs/app_jwt_auth_plug_test.exs:1: TrentoWeb.Plugs.AppJWTAuthPlugTest.__ex_unit__/2



  7) test should keep an already loaded user details (TrentoWeb.Plugs.LoadUserPlugTest)
     test/trento_web/plugs/load_user_plug_test.exs:29
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1614ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/plugs/load_user_plug_test.exs:1: TrentoWeb.Plugs.LoadUserPlugTest.__ex_unit__/2

     The following output was logged:
     09:32:08.009 [error] Could not refresh the access token: [message: "Invalid token", claim: "aud", claim_val: "trento_audnew"]
     


  8) test Alerting errors should be caught if SMTP server is wrongly set up (Trento.Infrastructure.Alerting.AlertingTest)
     test/trento/infrastructure/alerting/alerting_test.exs:145
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2016ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/data_case.ex:33: Trento.DataCase.__ex_unit_setup_0/1
       (trento 2.4.0) test/support/data_case.ex:1: Trento.DataCase.__ex_unit__/2
       test/trento/infrastructure/alerting/alerting_test.exs:1: Trento.Infrastructure.Alerting.AlertingTest.__ex_unit__/2

     The following output was logged:
     09:32:08.009 [error] Could not refresh the access token: [message: "Invalid token", claim: "aud", claim_val: "trento_audnew"]
     


  9) test renders suse_manager.json should render relevant fields (TrentoWeb.V1.SettingsJSONTest)
     test/trento_web/views/v1/settings_view_json_test.exs:7
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1806ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/views/v1/settings_view_json_test.exs:1: TrentoWeb.V1.SettingsJSONTest.__ex_unit__/2

     The following output was logged:
     09:32:08.009 [error] Could not refresh the access token: [message: "Invalid token", claim: "aud", claim_val: "trento_audnew"]
     


 10) test renders software_updates.json should render relevant fields (TrentoWeb.V1.SUSEManagerJSONTest)
     test/trento_web/views/v1/suse_manager_view_json_test.exs:9
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1905ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/views/v1/suse_manager_view_json_test.exs:1: TrentoWeb.V1.SUSEManagerJSONTest.__ex_unit__/2

     The following output was logged:
     09:32:08.009 [error] Could not refresh the access token: [message: "Invalid token", claim: "aud", claim_val: "trento_audnew"]
     


 11) test call/2 should return 501 when external idp integration is enabled (TrentoWeb.Plugs.ExternalIdpGuardPlugTest)
     test/trento_web/plugs/external_idp_guard_plug_test.exs:10
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1939ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/plugs/external_idp_guard_plug_test.exs:1: TrentoWeb.Plugs.ExternalIdpGuardPlugTest.__ex_unit__/2

     The following output was logged:
     09:32:08.009 [error] Could not refresh the access token: [message: "Invalid token", claim: "aud", claim_val: "trento_audnew"]
     


 12) test update user should update the user with abilities (TrentoWeb.V1.UsersControllerTest)
     test/trento_web/controllers/v1/users_controller_test.exs:331
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1830ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/controllers/v1/users_controller_test.exs:1: TrentoWeb.V1.UsersControllerTest.__ex_unit__/2

     The following output was logged:
     09:32:08.009 [error] Could not refresh the access token: [message: "Invalid token", claim: "aud", claim_val: "trento_audnew"]
     


 13) test should render maintenance_mode field (TrentoWeb.V2.ClusterJSONTest)
     test/trento_web/views/v2/cluster_view_json_test.exs:18
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1193ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/views/v2/cluster_view_json_test.exs:1: TrentoWeb.V2.ClusterJSONTest.__ex_unit__/2

     The following output was logged:
     09:32:08.009 [error] Could not refresh the access token: [message: "Invalid token", claim: "aud", claim_val: "trento_audnew"]
     


 14) test should return empty metadata in unknown event (Trento.ActivityLog.QueueEventParserTest)
     test/trento/activity_logging/queue_event_parser_test.exs:161
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1978ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/data_case.ex:33: Trento.DataCase.__ex_unit_setup_0/1
       (trento 2.4.0) test/support/data_case.ex:1: Trento.DataCase.__ex_unit__/2
       test/trento/activity_logging/queue_event_parser_test.exs:1: Trento.ActivityLog.QueueEventParserTest.__ex_unit__/2

     The following output was logged:
     09:32:08.009 [error] Could not refresh the access token: [message: "Invalid token", claim: "aud", claim_val: "trento_audnew"]
     
.......................................................................................................

 15) test should return a 500 if the exporters status cannot be fetched (TrentoWeb.V1.PrometheusControllerTest)
     test/trento_web/controllers/v1/prometheus_controller_test.exs:60
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 403ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/controllers/v1/prometheus_controller_test.exs:1: TrentoWeb.V1.PrometheusControllerTest.__ex_unit__/2

     The following output was logged:
     09:32:08.925 [error] Decoding error: %Protobuf.DecodeError{message: "insufficient data decoding field_number 12, expected \"d-payload\" to be at least 97 bytes"}
     09:32:08.926 [error] Invalid trento event: :decoding_error
     09:32:09.043 request_id=GD0uSrhtKypfDg0AAAjM [error] Failed to handle discovery event: [:any_error]
     


 16) test operation completed should get actor if operation requested is logged (Trento.ActivityLog.QueueEventParserTest)
     test/trento/activity_logging/queue_event_parser_test.exs:14
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 405ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/data_case.ex:33: Trento.DataCase.__ex_unit_setup_0/1
       (trento 2.4.0) test/support/data_case.ex:1: Trento.DataCase.__ex_unit__/2
       test/trento/activity_logging/queue_event_parser_test.exs:1: Trento.ActivityLog.QueueEventParserTest.__ex_unit__/2

     The following output was logged:
     09:32:08.925 [error] Decoding error: %Protobuf.DecodeError{message: "insufficient data decoding field_number 12, expected \"d-payload\" to be at least 97 bytes"}
     09:32:08.926 [error] Invalid trento event: :decoding_error
     09:32:09.043 request_id=GD0uSrhtKypfDg0AAAjM [error] Failed to handle discovery event: [:any_error]
     
...

 17) test call/2 should redirect to the newest version path when this version is available (TrentoWeb.Plugs.ApiRedirectorTest)
     test/trento_web/plugs/api_redirector_test.exs:79
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 421ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/plugs/api_redirector_test.exs:1: TrentoWeb.Plugs.ApiRedirectorTest.__ex_unit__/2

     The following output was logged:
     09:32:08.925 [error] Decoding error: %Protobuf.DecodeError{message: "insufficient data decoding field_number 12, expected \"d-payload\" to be at least 97 bytes"}
     09:32:08.926 [error] Invalid trento event: :decoding_error
     09:32:09.043 request_id=GD0uSrhtKypfDg0AAAjM [error] Failed to handle discovery event: [:any_error]
     


 18) test clear_expired_logs clear expired logs with two days retention (Trento.ActivityLog.ActivityLogTest)
     test/trento/activity_logging/activity_log_test.exs:119
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 430ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento/activity_logging/activity_log_test.exs:1: Trento.ActivityLog.ActivityLogTest.__ex_unit__/2

     The following output was logged:
     09:32:08.925 [error] Decoding error: %Protobuf.DecodeError{message: "insufficient data decoding field_number 12, expected \"d-payload\" to be at least 97 bytes"}
     09:32:08.926 [error] Invalid trento event: :decoding_error
     09:32:09.043 request_id=GD0uSrhtKypfDg0AAAjM [error] Failed to handle discovery event: [:any_error]
     


 19) test process should process ExecutionStarted and broadcast to the socket (Trento.Infrastructure.Checks.AMQP.ProcessorTest)
     test/trento/infrastructure/checks/processor_test.exs:28
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 411ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/channel_case.ex:34: TrentoWeb.ChannelCase.__ex_unit_setup_0/1
       (trento 2.4.0) test/support/channel_case.ex:1: TrentoWeb.ChannelCase.__ex_unit__/2
       test/trento/infrastructure/checks/processor_test.exs:1: Trento.Infrastructure.Checks.AMQP.ProcessorTest.__ex_unit__/2

     The following output was logged:
     09:32:08.925 [error] Decoding error: %Protobuf.DecodeError{message: "insufficient data decoding field_number 12, expected \"d-payload\" to be at least 97 bytes"}
     09:32:08.926 [error] Invalid trento event: :decoding_error
     09:32:09.043 request_id=GD0uSrhtKypfDg0AAAjM [error] Failed to handle discovery event: [:any_error]
     
.

 20) test retrieve errata details should return 422 when affected packages not found (TrentoWeb.V1.SUSEManagerControllerTest)
     test/trento_web/controllers/v1/suse_manager_controller_test.exs:369
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 472ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/controllers/v1/suse_manager_controller_test.exs:1: TrentoWeb.V1.SUSEManagerControllerTest.__ex_unit__/2

     The following output was logged:
     09:32:09.043 request_id=GD0uSrhtKypfDg0AAAjM [error] Failed to handle discovery event: [:any_error]
     


 21) test should pass through connections without user references (TrentoWeb.Plugs.LoadUserPlugTest)
     test/trento_web/plugs/load_user_plug_test.exs:38
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 451ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/plugs/load_user_plug_test.exs:1: TrentoWeb.Plugs.LoadUserPlugTest.__ex_unit__/2

     The following output was logged:
     09:32:09.043 request_id=GD0uSrhtKypfDg0AAAjM [error] Failed to handle discovery event: [:any_error]
     


 22) test process should return error if the event cannot be decoded (Trento.Infrastructure.Operations.AMQP.ProcessorTest)
     test/trento/infrastructure/operations/processor_test.exs:87
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 444ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/channel_case.ex:34: TrentoWeb.ChannelCase.__ex_unit_setup_0/1
       (trento 2.4.0) test/support/channel_case.ex:1: TrentoWeb.ChannelCase.__ex_unit__/2
       test/trento/infrastructure/operations/processor_test.exs:1: Trento.Infrastructure.Operations.AMQP.ProcessorTest.__ex_unit__/2

     The following output was logged:
     09:32:09.043 request_id=GD0uSrhtKypfDg0AAAjM [error] Failed to handle discovery event: [:any_error]
     


 23) test should accept an Authenticated request with the correct jti (TrentoWeb.Plugs.AuthenticateAPIKeyPlugTest)
     test/trento_web/plugs/authenticate_apikey_plug_test.exs:34
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 442ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/plugs/authenticate_apikey_plug_test.exs:1: TrentoWeb.Plugs.AuthenticateAPIKeyPlugTest.__ex_unit__/2

     The following output was logged:
     09:32:09.043 request_id=GD0uSrhtKypfDg0AAAjM [error] Failed to handle discovery event: [:any_error]
     
..............

 24) test catalog amqp processor should gracefully handle missing user information (Trento.Infrastructure.Catalog.AMQP.ProcessorTest)
     test/trento/infrastructure/catalog/processor_test.exs:88
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 482ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/data_case.ex:33: Trento.DataCase.__ex_unit_setup_0/1
       (trento 2.4.0) test/support/data_case.ex:1: Trento.DataCase.__ex_unit__/2
       test/trento/infrastructure/catalog/processor_test.exs:1: Trento.Infrastructure.Catalog.AMQP.ProcessorTest.__ex_unit__/2

     The following output was logged:
     09:32:09.951 request_id=GD0uSvNfBeFmiIYAAAkL [error] Error: software updates settings already configured
     


 25) test should reject an Unauthorized request (TrentoWeb.Plugs.AuthenticateAPIKeyPlugTest)
     test/trento_web/plugs/authenticate_apikey_plug_test.exs:16
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 541ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/plugs/authenticate_apikey_plug_test.exs:1: TrentoWeb.Plugs.AuthenticateAPIKeyPlugTest.__ex_unit__/2

     The following output was logged:
     09:32:09.413 [error] Could not refresh the access token: :signature_error
     09:32:09.421 request_id=GD0uStRMm6DnK-oAADMF [error] Failed to handle discovery event: [:associated_database_not_found]
     09:32:09.951 request_id=GD0uSvNfBeFmiIYAAAkL [error] Error: software updates settings already configured
     


 26) test process should request saptune discovery request when saptune_solution_apply operation is completed (Trento.Infrastructure.Operations.AMQP.ProcessorTest)
     test/trento/infrastructure/operations/processor_test.exs:92
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 541ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/channel_case.ex:34: TrentoWeb.ChannelCase.__ex_unit_setup_0/1
       (trento 2.4.0) test/support/channel_case.ex:1: TrentoWeb.ChannelCase.__ex_unit__/2
       test/trento/infrastructure/operations/processor_test.exs:1: Trento.Infrastructure.Operations.AMQP.ProcessorTest.__ex_unit__/2

     The following output was logged:
     09:32:09.413 [error] Could not refresh the access token: :signature_error
     09:32:09.421 request_id=GD0uStRMm6DnK-oAADMF [error] Failed to handle discovery event: [:associated_database_not_found]
     09:32:09.951 request_id=GD0uSvNfBeFmiIYAAAkL [error] Error: software updates settings already configured
     


 27) test init/1 should raise ArgumentError when :available_api_versions is an empty list (TrentoWeb.Plugs.ApiRedirectorTest)
     test/trento_web/plugs/api_redirector_test.exs:20
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 624ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/plugs/api_redirector_test.exs:1: TrentoWeb.Plugs.ApiRedirectorTest.__ex_unit__/2

     The following output was logged:
     09:32:09.413 [error] Could not refresh the access token: :signature_error
     09:32:09.421 request_id=GD0uStRMm6DnK-oAADMF [error] Failed to handle discovery event: [:associated_database_not_found]
     09:32:09.951 request_id=GD0uSvNfBeFmiIYAAAkL [error] Error: software updates settings already configured
     


 28) test host memory chart should return 404 if a cpu chart is requested for a non existing host (TrentoWeb.V1.ChartControllerTest)
     test/trento_web/controllers/v1/chart_controller_test.exs:48
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 465ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/controllers/v1/chart_controller_test.exs:1: TrentoWeb.V1.ChartControllerTest.__ex_unit__/2

     The following output was logged:
     09:32:09.951 request_id=GD0uSvNfBeFmiIYAAAkL [error] Error: software updates settings already configured
     


 29) test retrieve errata details should return errata details (TrentoWeb.V1.SUSEManagerControllerTest)
     test/trento_web/controllers/v1/suse_manager_controller_test.exs:164
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 541ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/controllers/v1/suse_manager_controller_test.exs:1: TrentoWeb.V1.SUSEManagerControllerTest.__ex_unit__/2

     The following output was logged:
     09:32:09.413 [error] Could not refresh the access token: :signature_error
     09:32:09.421 request_id=GD0uStRMm6DnK-oAADMF [error] Failed to handle discovery event: [:associated_database_not_found]
     09:32:09.951 request_id=GD0uSvNfBeFmiIYAAAkL [error] Error: software updates settings already configured
     


 30) test clear_expired_logs clear expired logs with two months retention (Trento.ActivityLog.ActivityLogTest)
     test/trento/activity_logging/activity_log_test.exs:119
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 624ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento/activity_logging/activity_log_test.exs:1: Trento.ActivityLog.ActivityLogTest.__ex_unit__/2

     The following output was logged:
     09:32:09.413 [error] Could not refresh the access token: :signature_error
     09:32:09.421 request_id=GD0uStRMm6DnK-oAADMF [error] Failed to handle discovery event: [:associated_database_not_found]
     09:32:09.951 request_id=GD0uSvNfBeFmiIYAAAkL [error] Error: software updates settings already configured
     


 31) test delete should send 204 response on successful database instance deletion (TrentoWeb.V1.DatabaseControllerTest)
     test/trento_web/controllers/v1/database_controller_test.exs:38
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 542ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/controllers/v1/database_controller_test.exs:1: TrentoWeb.V1.DatabaseControllerTest.__ex_unit__/2

     The following output was logged:
     09:32:09.413 [error] Could not refresh the access token: :signature_error
     09:32:09.421 request_id=GD0uStRMm6DnK-oAADMF [error] Failed to handle discovery event: [:associated_database_not_found]
     09:32:09.951 request_id=GD0uSvNfBeFmiIYAAAkL [error] Error: software updates settings already configured
     


 32) test renew/2 should renew a token and put it in the conn private if the refresh token is valid (TrentoWeb.Plugs.AppJWTAuthPlugTest)
     test/trento_web/plugs/app_jwt_auth_plug_test.exs:59
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 538ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/plugs/app_jwt_auth_plug_test.exs:1: TrentoWeb.Plugs.AppJWTAuthPlugTest.__ex_unit__/2

     The following output was logged:
     09:32:09.421 request_id=GD0uStRMm6DnK-oAADMF [error] Failed to handle discovery event: [:associated_database_not_found]
     09:32:09.951 request_id=GD0uSvNfBeFmiIYAAAkL [error] Error: software updates settings already configured
     


 33) test process should return error if the event handling fails (Trento.Infrastructure.Checks.AMQP.ProcessorTest)
     test/trento/infrastructure/checks/processor_test.exs:91
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 624ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/channel_case.ex:34: TrentoWeb.ChannelCase.__ex_unit_setup_0/1
       (trento 2.4.0) test/support/channel_case.ex:1: TrentoWeb.ChannelCase.__ex_unit__/2
       test/trento/infrastructure/checks/processor_test.exs:1: Trento.Infrastructure.Checks.AMQP.ProcessorTest.__ex_unit__/2

     The following output was logged:
     09:32:09.413 [error] Could not refresh the access token: :signature_error
     09:32:09.421 request_id=GD0uStRMm6DnK-oAADMF [error] Failed to handle discovery event: [:associated_database_not_found]
     09:32:09.951 request_id=GD0uSvNfBeFmiIYAAAkL [error] Error: software updates settings already configured
     


 34) test tags delete_tag/2 returns a not found error if the resource does not exist (Trento.TagsTest)
     test/trento/tags_test.exs:54
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 498ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/data_case.ex:33: Trento.DataCase.__ex_unit_setup_0/1
       (trento 2.4.0) test/support/data_case.ex:1: Trento.DataCase.__ex_unit__/2
       test/trento/tags_test.exs:1: Trento.TagsTest.__ex_unit__/2

     The following output was logged:
     09:32:09.951 request_id=GD0uSvNfBeFmiIYAAAkL [error] Error: software updates settings already configured
     


 35) test should remove parent field from ASCS/ERS clusters (TrentoWeb.V2.ClusterJSONTest)
     test/trento_web/views/v2/cluster_view_json_test.exs:49
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 480ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/views/v2/cluster_view_json_test.exs:1: TrentoWeb.V2.ClusterJSONTest.__ex_unit__/2

     The following output was logged:
     09:32:09.951 request_id=GD0uSvNfBeFmiIYAAAkL [error] Error: software updates settings already configured
     
.

 36) test enriching checks execution requests should enrich host checks execution request (Trento.ActivityLog.MetadataEnricherTest)
     test/trento/activity_logging/metadata_enricher_test.exs:181
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 580ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/data_case.ex:33: Trento.DataCase.__ex_unit_setup_0/1
       (trento 2.4.0) test/support/data_case.ex:1: Trento.DataCase.__ex_unit__/2
       test/trento/activity_logging/metadata_enricher_test.exs:1: Trento.ActivityLog.MetadataEnricherTest.__ex_unit__/2

     The following output was logged:
     09:32:09.951 request_id=GD0uSvNfBeFmiIYAAAkL [error] Error: software updates settings already configured
     


 37) test resource_managed?/2 should return false in a unhandled cluster type (Trento.ClustersTest)
     test/trento/clusters_test.exs:1098
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 576ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/data_case.ex:33: Trento.DataCase.__ex_unit_setup_0/1
       (trento 2.4.0) test/support/data_case.ex:1: Trento.DataCase.__ex_unit__/2
       test/trento/clusters_test.exs:1: Trento.ClustersTest.__ex_unit__/2

     The following output was logged:
     09:32:09.951 request_id=GD0uSvNfBeFmiIYAAAkL [error] Error: software updates settings already configured
     


 38) test checks customization should get correct actor (Trento.ActivityLog.QueueEventParserTest)
     test/trento/activity_logging/queue_event_parser_test.exs:60
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 466ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/data_case.ex:33: Trento.DataCase.__ex_unit_setup_0/1
       (trento 2.4.0) test/support/data_case.ex:1: Trento.DataCase.__ex_unit__/2
       test/trento/activity_logging/queue_event_parser_test.exs:1: Trento.ActivityLog.QueueEventParserTest.__ex_unit__/2

     The following output was logged:
     09:32:09.951 request_id=GD0uSvNfBeFmiIYAAAkL [error] Error: software updates settings already configured
     


 39) test Alerting the configured recipient about crucial facts with email notifications Notify SAP System Health going critical (Trento.Infrastructure.Alerting.AlertingTest)
     test/trento/infrastructure/alerting/alerting_test.exs:123
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 574ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/data_case.ex:33: Trento.DataCase.__ex_unit_setup_0/1
       (trento 2.4.0) test/support/data_case.ex:1: Trento.DataCase.__ex_unit__/2
       test/trento/infrastructure/alerting/alerting_test.exs:1: Trento.Infrastructure.Alerting.AlertingTest.__ex_unit__/2

     The following output was logged:
     09:32:09.951 request_id=GD0uSvNfBeFmiIYAAAkL [error] Error: software updates settings already configured
     
..

 40) test clear_expired_logs clear expired logs with one day retention (Trento.ActivityLog.ActivityLogTest)
     test/trento/activity_logging/activity_log_test.exs:119
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 401ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento/activity_logging/activity_log_test.exs:1: Trento.ActivityLog.ActivityLogTest.__ex_unit__/2

     The following output was logged:
     09:32:10.346 [error] Unable to authenticate apikey: :token_jti_not_valid
     


 41) test renew/2 should return an error if the refresh token signature is invalid (TrentoWeb.Plugs.AppJWTAuthPlugTest)
     test/trento_web/plugs/app_jwt_auth_plug_test.exs:107
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 401ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/plugs/app_jwt_auth_plug_test.exs:1: TrentoWeb.Plugs.AppJWTAuthPlugTest.__ex_unit__/2

     The following output was logged:
     09:32:10.346 [error] Unable to authenticate apikey: :token_jti_not_valid
     


 42) test retrieve available software updates info should return 403 when no settings have been saved (TrentoWeb.V1.SUSEManagerControllerTest)
     test/trento_web/controllers/v1/suse_manager_controller_test.exs:62
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 401ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/controllers/v1/suse_manager_controller_test.exs:1: TrentoWeb.V1.SUSEManagerControllerTest.__ex_unit__/2

     The following output was logged:
     09:32:10.346 [error] Unable to authenticate apikey: :token_jti_not_valid
     


 43) test cpu host chart should return 422 when the input request timestamps are not valid (TrentoWeb.V1.ChartControllerTest)
     test/trento_web/controllers/v1/chart_controller_test.exs:71
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 401ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/controllers/v1/chart_controller_test.exs:1: TrentoWeb.V1.ChartControllerTest.__ex_unit__/2

     The following output was logged:
     09:32:10.346 [error] Unable to authenticate apikey: :token_jti_not_valid
     


 44) test process should return error if the event cannot be decoded (Trento.Infrastructure.Checks.AMQP.ProcessorTest)
     test/trento/infrastructure/checks/processor_test.exs:114
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 401ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/channel_case.ex:34: TrentoWeb.ChannelCase.__ex_unit_setup_0/1
       (trento 2.4.0) test/support/channel_case.ex:1: TrentoWeb.ChannelCase.__ex_unit__/2
       test/trento/infrastructure/checks/processor_test.exs:1: Trento.Infrastructure.Checks.AMQP.ProcessorTest.__ex_unit__/2

     The following output was logged:
     09:32:10.346 [error] Unable to authenticate apikey: :token_jti_not_valid
     


 45) test tags add_tag/3 adds a tag to the desired resource (Trento.TagsTest)
     test/trento/tags_test.exs:16
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 401ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/data_case.ex:33: Trento.DataCase.__ex_unit_setup_0/1
       (trento 2.4.0) test/support/data_case.ex:1: Trento.DataCase.__ex_unit__/2
       test/trento/tags_test.exs:1: Trento.TagsTest.__ex_unit__/2

     The following output was logged:
     09:32:10.346 [error] Unable to authenticate apikey: :token_jti_not_valid
     


 46) test delete should allow the request when the user has cleanup:database_instance ability (TrentoWeb.V1.DatabaseControllerTest)
     test/trento_web/controllers/v1/database_controller_test.exs:117
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 401ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/controllers/v1/database_controller_test.exs:1: TrentoWeb.V1.DatabaseControllerTest.__ex_unit__/2

     The following output was logged:
     09:32:10.346 [error] Unable to authenticate apikey: :token_jti_not_valid
     


 47) test call/2 should redirect to the correctly versioned path with also a query string (TrentoWeb.Plugs.ApiRedirectorTest)
     test/trento_web/plugs/api_redirector_test.exs:93
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 401ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/plugs/api_redirector_test.exs:1: TrentoWeb.Plugs.ApiRedirectorTest.__ex_unit__/2

     The following output was logged:
     09:32:10.346 [error] Unable to authenticate apikey: :token_jti_not_valid
     
...................................................................................................................................................................................................................

 48) test Checks Selection should return 202 when the checks were selected (TrentoWeb.V1.HostControllerTest)
     test/trento_web/controllers/v1/host_controller_test.exs:58
     ** (RuntimeError) expected response with status 202, got: 404, with body:
     "{\"errors\":[{\"title\":\"Not Found\",\"detail\":\"The requested resource cannot be found.\"}]}"
     code: |> json_response(:accepted)
     stacktrace:
       (phoenix 1.7.14) lib/phoenix/test/conn_test.ex:373: Phoenix.ConnTest.response/2
       (phoenix 1.7.14) lib/phoenix/test/conn_test.ex:419: Phoenix.ConnTest.json_response/2
       test/trento_web/controllers/v1/host_controller_test.exs:69: (test)


Finished in 42.4 seconds (25.0s async, 17.4s sync)
1194 tests, 48 failures

Randomized with seed 14670
