......................................................................................................................................................................................................................

  1) test call/2 should not halt connection when external idp integration is disabled (TrentoWeb.Plugs.ExternalIdpGuardPlugTest)
     test/trento_web/plugs/external_idp_guard_plug_test.exs:27
     Expected false or nil, got true
     code: refute res.halted
     stacktrace:
       test/trento_web/plugs/external_idp_guard_plug_test.exs:31: (test)

     The following output was logged:
     09:47:05.352 [error] Could not refresh the access token: :signature_error
     09:47:05.455 [error] Unable to authenticate apikey: :token_jti_not_valid
     
..........................................................

  2) test domain event activity log metadata enrichment should enrich with clustername (Trento.ActivityLog.MetadataEnricherTest)
     test/trento/activity_logging/metadata_enricher_test.exs:391
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 406ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/data_case.ex:33: Trento.DataCase.__ex_unit_setup_0/1
       (trento 2.4.0) test/support/data_case.ex:1: Trento.DataCase.__ex_unit__/2
       test/trento/activity_logging/metadata_enricher_test.exs:1: Trento.ActivityLog.MetadataEnricherTest.__ex_unit__/2



  3) test should reject an Unauthorized request (TrentoWeb.Plugs.AuthenticateAPIKeyPlugTest)
     test/trento_web/plugs/authenticate_apikey_plug_test.exs:16
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 410ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/plugs/authenticate_apikey_plug_test.exs:1: TrentoWeb.Plugs.AuthenticateAPIKeyPlugTest.__ex_unit__/2

.

  4) test should return 'system' by default (Trento.ActivityLog.QueueEventParserTest)
     test/trento/activity_logging/queue_event_parser_test.exs:157
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 425ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/data_case.ex:33: Trento.DataCase.__ex_unit_setup_0/1
       (trento 2.4.0) test/support/data_case.ex:1: Trento.DataCase.__ex_unit__/2
       test/trento/activity_logging/queue_event_parser_test.exs:1: Trento.ActivityLog.QueueEventParserTest.__ex_unit__/2

     The following output was logged:
     09:47:07.373 [error] Could not refresh the access token: [message: "Invalid token", claim: "exp", claim_val: 1671663414]
     


  5) test should return operation not found if the given operation is not found (TrentoWeb.Plugs.OperationsPolicyPlugTest)
     test/trento_web/plugs/operations_policy_plug_test.exs:38
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 420ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/plugs/operations_policy_plug_test.exs:1: TrentoWeb.Plugs.OperationsPolicyPlugTest.__ex_unit__/2

     The following output was logged:
     09:47:07.373 [error] Could not refresh the access token: [message: "Invalid token", claim: "exp", claim_val: 1671663414]
     


  6) test should log activity on requests without user information - method: get (TrentoWeb.Plugs.ActivityLoggingPlugTest)
     test/trento_web/plugs/activity_logging_plug_test.exs:10
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 424ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/plugs/activity_logging_plug_test.exs:1: TrentoWeb.Plugs.ActivityLoggingPlugTest.__ex_unit__/2

     The following output was logged:
     09:47:07.373 [error] Could not refresh the access token: [message: "Invalid token", claim: "exp", claim_val: 1671663414]
     


  7) test ApiKeySettings should generate an infinite api key if the expiration in the settings is set to nil in an update (TrentoWeb.V1.SettingsControllerTest)
     test/trento_web/controllers/v1/settings_controller_test.exs:93
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 422ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/controllers/v1/settings_controller_test.exs:1: TrentoWeb.V1.SettingsControllerTest.__ex_unit__/2

     The following output was logged:
     09:47:07.373 [error] Could not refresh the access token: [message: "Invalid token", claim: "exp", claim_val: 1671663414]
     
........

  8) test should return a 500 if the exporters status cannot be fetched (TrentoWeb.V1.PrometheusControllerTest)
     test/trento_web/controllers/v1/prometheus_controller_test.exs:60
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 401ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/controllers/v1/prometheus_controller_test.exs:1: TrentoWeb.V1.PrometheusControllerTest.__ex_unit__/2

     The following output was logged:
     09:47:07.373 [error] Could not refresh the access token: [message: "Invalid token", claim: "exp", claim_val: 1671663414]
     09:47:07.413 [error] Decoding error: %Protobuf.DecodeError{message: "insufficient data decoding field_number 12, expected \"d-payload\" to be at least 97 bytes"}
     09:47:07.414 [error] Invalid trento event: :decoding_error
     
....................

  9) test process should process ExecutionCompleted and broadcast to the socket (Trento.Infrastructure.Checks.AMQP.ProcessorTest)
     test/trento/infrastructure/checks/processor_test.exs:63
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 480ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/channel_case.ex:34: TrentoWeb.ChannelCase.__ex_unit_setup_0/1
       (trento 2.4.0) test/support/channel_case.ex:1: TrentoWeb.ChannelCase.__ex_unit__/2
       test/trento/infrastructure/checks/processor_test.exs:1: Trento.Infrastructure.Checks.AMQP.ProcessorTest.__ex_unit__/2

     The following output was logged:
     09:47:07.513 [error] Failed to lookup smtp://143.234.3.227 address.
     09:47:07.516 request_id=GD0vG-9dX1R2vQcAABCF [error] Failed to handle discovery event: :unknown_discovery_type
     


 10) test call/2 should return 404 with the error view when the path is not recognized by the router (TrentoWeb.Plugs.ApiRedirectorTest)
     test/trento_web/plugs/api_redirector_test.exs:34
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 440ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/plugs/api_redirector_test.exs:1: TrentoWeb.Plugs.ApiRedirectorTest.__ex_unit__/2

     The following output was logged:
     09:47:07.513 [error] Failed to lookup smtp://143.234.3.227 address.
     09:47:07.516 request_id=GD0vG-9dX1R2vQcAABCF [error] Failed to handle discovery event: :unknown_discovery_type
     


 11) test should return the exporters status (TrentoWeb.V1.PrometheusControllerTest)
     test/trento_web/controllers/v1/prometheus_controller_test.exs:27
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 482ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/controllers/v1/prometheus_controller_test.exs:1: TrentoWeb.V1.PrometheusControllerTest.__ex_unit__/2

     The following output was logged:
     09:47:07.458 [error] Decoding error: %Protobuf.DecodeError{message: "insufficient data decoding field_number 12, expected \"d-payload\" to be at least 97 bytes"}
     09:47:07.459 [error] Invalid trento event: :decoding_error
     09:47:07.513 [error] Failed to lookup smtp://143.234.3.227 address.
     09:47:07.516 request_id=GD0vG-9dX1R2vQcAABCF [error] Failed to handle discovery event: :unknown_discovery_type
     


 12) test Alerting the configured recipient about crucial facts with email notifications Notify api key will be expired soon (Trento.Infrastructure.Alerting.AlertingTest)
     test/trento/infrastructure/alerting/alerting_test.exs:75
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 425ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/data_case.ex:33: Trento.DataCase.__ex_unit_setup_0/1
       (trento 2.4.0) test/support/data_case.ex:1: Trento.DataCase.__ex_unit__/2
       test/trento/infrastructure/alerting/alerting_test.exs:1: Trento.Infrastructure.Alerting.AlertingTest.__ex_unit__/2

     The following output was logged:
     09:47:07.516 request_id=GD0vG-9dX1R2vQcAABCF [error] Failed to handle discovery event: :unknown_discovery_type
     


 13) test retrieve errata details should return 422 when advisory details not found (TrentoWeb.V1.SUSEManagerControllerTest)
     test/trento_web/controllers/v1/suse_manager_controller_test.exs:369
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 431ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/controllers/v1/suse_manager_controller_test.exs:1: TrentoWeb.V1.SUSEManagerControllerTest.__ex_unit__/2

     The following output was logged:
     09:47:07.513 [error] Failed to lookup smtp://143.234.3.227 address.
     09:47:07.516 request_id=GD0vG-9dX1R2vQcAABCF [error] Failed to handle discovery event: :unknown_discovery_type
     
.............................................................................................................................................

 14) test delete should return 404 if the host was not found (TrentoWeb.V1.HostControllerTest)
     test/trento_web/controllers/v1/host_controller_test.exs:321
     ** (Mox.VerificationError) error while verifying mocks for #PID<0.3853.0>:
     
       * expected Trento.Commanded.Mock.dispatch/1 to be invoked once but it was invoked 0 times
     stacktrace:
       (mox 1.1.0) lib/mox.ex:778: Mox.verify_mock_or_all!/3
       (ex_unit 1.15.7) lib/ex_unit/on_exit_handler.ex:143: ExUnit.OnExitHandler.exec_callback/1
       (ex_unit 1.15.7) lib/ex_unit/on_exit_handler.ex:129: ExUnit.OnExitHandler.on_exit_runner_loop/0

     The following output was logged:
     09:47:13.101 [error] Could not join activity_log channel, requested user id: 4403, authenticated user id: 4402
     
....................................................................................................................................................................................................................................09:47:31.409 [error] Postgrex.Protocol (#PID<0.8075.0>) disconnected: ** (DBConnection.ConnectionError) owner #PID<0.10168.0> exited

Finished in 44.4 seconds (24.6s async, 19.7s sync)
1194 tests, 14 failures

Randomized with seed 450092
