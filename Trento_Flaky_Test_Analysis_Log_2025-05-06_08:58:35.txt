..............................................................................................

  1) test process should process OperationCompleted and broadcast to the socket (Trento.Infrastructure.Operations.AMQP.ProcessorTest)
     test/trento/infrastructure/operations/processor_test.exs:59
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 572ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/channel_case.ex:34: TrentoWeb.ChannelCase.__ex_unit_setup_0/1
       (trento 2.4.0) test/support/channel_case.ex:1: TrentoWeb.ChannelCase.__ex_unit__/2
       test/trento/infrastructure/operations/processor_test.exs:1: Trento.Infrastructure.Operations.AMQP.ProcessorTest.__ex_unit__/2

     The following output was logged:
     08:58:41.630 [error] Decoding error: %Protobuf.DecodeError{message: "insufficient data decoding field_number 12, expected \"d-payload\" to be at least 97 bytes"}
     08:58:41.630 [error] Invalid trento event: :decoding_error
     08:58:41.716 request_id=GDzd4hdN8FFy19wAAALN [error] Failed to handle discovery event: [:associated_database_not_found]
     


  2) test should accept an Authenticated request with the correct jti (TrentoWeb.Plugs.AuthenticateAPIKeyPlugTest)
     test/trento_web/plugs/authenticate_apikey_plug_test.exs:34
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 677ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/plugs/authenticate_apikey_plug_test.exs:1: TrentoWeb.Plugs.AuthenticateAPIKeyPlugTest.__ex_unit__/2

     The following output was logged:
     08:58:41.630 [error] Decoding error: %Protobuf.DecodeError{message: "insufficient data decoding field_number 12, expected \"d-payload\" to be at least 97 bytes"}
     08:58:41.630 [error] Invalid trento event: :decoding_error
     08:58:41.716 request_id=GDzd4hdN8FFy19wAAALN [error] Failed to handle discovery event: [:associated_database_not_found]
     
.................

  3) test clear_expired_logs clear expired logs with two days retention (Trento.ActivityLog.ActivityLogTest)
     test/trento/activity_logging/activity_log_test.exs:119
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 433ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento/activity_logging/activity_log_test.exs:1: Trento.ActivityLog.ActivityLogTest.__ex_unit__/2



  4) test renders user.json should correctly render a user when the user has no user identities (TrentoWeb.V1.UsersJSONTest)
     test/trento_web/views/v1/users_view_json_test.exs:28
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 431ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/views/v1/users_view_json_test.exs:1: TrentoWeb.V1.UsersJSONTest.__ex_unit__/2

.

  5) test call/2 should redirect to the newest version path when this version is available (TrentoWeb.Plugs.ApiRedirectorTest)
     test/trento_web/plugs/api_redirector_test.exs:79
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 408ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/plugs/api_redirector_test.exs:1: TrentoWeb.Plugs.ApiRedirectorTest.__ex_unit__/2

.

  6) test Alerting the configured recipient about crucial facts with email notifications Notify SAP System Health going critical (Trento.Infrastructure.Alerting.AlertingTest)
     test/trento/infrastructure/alerting/alerting_test.exs:123
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 456ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/data_case.ex:33: Trento.DataCase.__ex_unit_setup_0/1
       (trento 2.4.0) test/support/data_case.ex:1: Trento.DataCase.__ex_unit__/2
       test/trento/infrastructure/alerting/alerting_test.exs:1: Trento.Infrastructure.Alerting.AlertingTest.__ex_unit__/2



  7) test should return the expected targets (TrentoWeb.V1.PrometheusControllerTest)
     test/trento_web/controllers/v1/prometheus_controller_test.exs:10
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 463ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/controllers/v1/prometheus_controller_test.exs:1: TrentoWeb.V1.PrometheusControllerTest.__ex_unit__/2



  8) test retrieve upgradable packages related patches should return relevant patches grouped by package id (TrentoWeb.V1.SUSEManagerControllerTest)
     test/trento_web/controllers/v1/suse_manager_controller_test.exs:92
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 437ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/controllers/v1/suse_manager_controller_test.exs:1: TrentoWeb.V1.SUSEManagerControllerTest.__ex_unit__/2



  9) test should reject an Unauthorized request (TrentoWeb.Plugs.AuthenticateAPIKeyPlugTest)
     test/trento_web/plugs/authenticate_apikey_plug_test.exs:16
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 445ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/plugs/authenticate_apikey_plug_test.exs:1: TrentoWeb.Plugs.AuthenticateAPIKeyPlugTest.__ex_unit__/2



 10) test process should process OperationStarted and broadcast to the socket (Trento.Infrastructure.Operations.AMQP.ProcessorTest)
     test/trento/infrastructure/operations/processor_test.exs:34
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 446ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/channel_case.ex:34: TrentoWeb.ChannelCase.__ex_unit_setup_0/1
       (trento 2.4.0) test/support/channel_case.ex:1: TrentoWeb.ChannelCase.__ex_unit__/2
       test/trento/infrastructure/operations/processor_test.exs:1: Trento.Infrastructure.Operations.AMQP.ProcessorTest.__ex_unit__/2

.

 11) test catalog amqp processor should return error if the event cannot be decoded (Trento.Infrastructure.Catalog.AMQP.ProcessorTest)
     test/trento/infrastructure/catalog/processor_test.exs:31
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 450ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/data_case.ex:33: Trento.DataCase.__ex_unit_setup_0/1
       (trento 2.4.0) test/support/data_case.ex:1: Trento.DataCase.__ex_unit__/2
       test/trento/infrastructure/catalog/processor_test.exs:1: Trento.Infrastructure.Catalog.AMQP.ProcessorTest.__ex_unit__/2

     The following output was logged:
     08:58:42.321 request_id=GDzd4vGlQrI3LY4AABCH [error] Requested checks execution for a non-existing cluster: c3c87ba2-9a02-453e-bd76-d03c1755d0d4
     


 12) test should remove parent field from HANA clusters (TrentoWeb.V2.ClusterJSONTest)
     test/trento_web/views/v2/cluster_view_json_test.exs:27
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 439ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/views/v2/cluster_view_json_test.exs:1: TrentoWeb.V2.ClusterJSONTest.__ex_unit__/2

     The following output was logged:
     08:58:42.321 request_id=GDzd4vGlQrI3LY4AABCH [error] Requested checks execution for a non-existing cluster: c3c87ba2-9a02-453e-bd76-d03c1755d0d4
     


 13) test checks execution with wanda adapter should not start checks execution if the cluster is not registered (Trento.ClustersTest)
     test/trento/clusters_test.exs:203
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 449ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/data_case.ex:33: Trento.DataCase.__ex_unit_setup_0/1
       (trento 2.4.0) test/support/data_case.ex:1: Trento.DataCase.__ex_unit__/2
       test/trento/clusters_test.exs:1: Trento.ClustersTest.__ex_unit__/2

     The following output was logged:
     08:58:42.321 request_id=GDzd4vGlQrI3LY4AABCH [error] Requested checks execution for a non-existing cluster: c3c87ba2-9a02-453e-bd76-d03c1755d0d4
     


 14) test should return operation not found if the given operation is not found (TrentoWeb.Plugs.OperationsPolicyPlugTest)
     test/trento_web/plugs/operations_policy_plug_test.exs:38
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 442ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/plugs/operations_policy_plug_test.exs:1: TrentoWeb.Plugs.OperationsPolicyPlugTest.__ex_unit__/2

     The following output was logged:
     08:58:42.321 request_id=GDzd4vGlQrI3LY4AABCH [error] Requested checks execution for a non-existing cluster: c3c87ba2-9a02-453e-bd76-d03c1755d0d4
     


 15) test tags delete_tag/2 deletes a tag from a given resource (Trento.TagsTest)
     test/trento/tags_test.exs:48
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 448ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/data_case.ex:33: Trento.DataCase.__ex_unit_setup_0/1
       (trento 2.4.0) test/support/data_case.ex:1: Trento.DataCase.__ex_unit__/2
       test/trento/tags_test.exs:1: Trento.TagsTest.__ex_unit__/2

     The following output was logged:
     08:58:42.321 request_id=GDzd4vGlQrI3LY4AABCH [error] Requested checks execution for a non-existing cluster: c3c87ba2-9a02-453e-bd76-d03c1755d0d4
     


 16) test should render host details relevant information (TrentoWeb.V1.HostJSONTest)
     test/trento_web/views/v1/host_view_json_test.exs:29
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 440ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/views/v1/host_view_json_test.exs:1: TrentoWeb.V1.HostJSONTest.__ex_unit__/2

     The following output was logged:
     08:58:42.321 request_id=GDzd4vGlQrI3LY4AABCH [error] Requested checks execution for a non-existing cluster: c3c87ba2-9a02-453e-bd76-d03c1755d0d4
     


 17) test should log activity on requests without user information - method: post (TrentoWeb.Plugs.ActivityLoggingPlugTest)
     test/trento_web/plugs/activity_logging_plug_test.exs:10
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 438ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/plugs/activity_logging_plug_test.exs:1: TrentoWeb.Plugs.ActivityLoggingPlugTest.__ex_unit__/2

     The following output was logged:
     08:58:42.321 request_id=GDzd4vGlQrI3LY4AABCH [error] Requested checks execution for a non-existing cluster: c3c87ba2-9a02-453e-bd76-d03c1755d0d4
     
........

 18) test init/1 should raise ArgumentError when :available_api_versions is an empty list (TrentoWeb.Plugs.ApiRedirectorTest)
     test/trento_web/plugs/api_redirector_test.exs:20
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 402ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 509]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 416]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 980]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 935]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 241]}]}}
     stacktrace:
       (ecto_sql 3.11.3) lib/ecto/adapters/sql/sandbox.ex:413: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (trento 2.4.0) test/support/conn_case.ex:42: TrentoWeb.ConnCase.__ex_unit_setup_1/1
       (trento 2.4.0) test/support/conn_case.ex:1: TrentoWeb.ConnCase.__ex_unit__/2
       test/trento_web/plugs/api_redirector_test.exs:1: TrentoWeb.Plugs.ApiRedirectorTest.__ex_unit__/2

     The following output was logged:
     08:58:42.321 request_id=GDzd4vGlQrI3LY4AABCH [error] Requested checks execution for a non-existing cluster: c3c87ba2-9a02-453e-bd76-d03c1755d0d4
     08:58:42.349 request_id=GDzd4vSVutL6HW8AADtB [error] Failed to handle discovery event: :unknown_discovery_type
     
...........................................................................................................................................